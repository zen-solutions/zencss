/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./modules/accordian.js":
/*!******************************!*\
  !*** ./modules/accordian.js ***!
  \******************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2023 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\ndocument.addEventListener('DOMContentLoaded', function() {\n    var accordionToggles = document.querySelectorAll('.accordion-toggle');\n\n    accordionToggles.forEach(function(accordionToggle) {\n        accordionToggle.addEventListener('click', function() {\n            // Determine if the clicked toggle is being expanded\n            var isExpanding = this.getAttribute('aria-expanded') === 'false';\n\n            // Remove active class from all toggles and reset icons\n            accordionToggles.forEach(function(otherToggle) {\n                otherToggle.classList.remove('active-toggle');\n                otherToggle.setAttribute('aria-expanded', 'false');\n                \n                var otherIcon = otherToggle.querySelector('.zenicon-keyboard-arrow-right, .zenicon-keyboard-arrow-down');\n                if (otherIcon) {\n                    otherIcon.classList.remove('zenicon-keyboard-arrow-down');\n                    otherIcon.classList.add('zenicon-keyboard-arrow-right');\n                }\n\n                var otherPanel = otherToggle.nextElementSibling;\n                otherPanel.style.maxHeight = null;\n            });\n\n            // Set the clicked toggle as active if it's expanding\n            if (isExpanding) {\n                this.classList.add('active-toggle');\n                this.setAttribute('aria-expanded', 'true');\n\n                var icon = this.querySelector('.zenicon-keyboard-arrow-right, .zenicon-keyboard-arrow-down');\n                if (icon) {\n                    icon.classList.remove('zenicon-keyboard-arrow-right');\n                    icon.classList.add('zenicon-keyboard-arrow-down');\n                }\n\n                var panel = this.nextElementSibling;\n                panel.style.maxHeight = panel.scrollHeight > 200 ? '1000px' : (panel.scrollHeight + 10) + \"px\";\n            }\n        });\n    });\n});\n\n\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   const accordion = document.querySelector('.accordion');\n\n//   if (accordion) {\n//     const toggles = accordion.querySelectorAll('.toggle');\n\n//     toggles.forEach(toggle => {\n//       toggle.addEventListener('change', () => {\n//         // Define the expanded content area\n//         const contentArea = document.getElementById(toggle.id).nextElementSibling.nextElementSibling;\n\n//         if (toggle.checked) {\n//           // When the toggle is checked, set overflow to hidden to prevent scrollbar\n//           contentArea.style.overflow = 'hidden';\n\n//           // Set a timeout that matches your CSS transition time\n//           setTimeout(() => {\n//             // After the transition, set overflow to auto if content is taller than the container\n//             contentArea.style.overflow = 'auto';\n//           }, 500); // Adjust the time to match your CSS transition-duration\n//         } else {\n//           // When the toggle is not checked, immediately set overflow to hidden\n//           contentArea.style.overflow = 'hidden';\n//         }\n\n//         toggles.forEach(t => {\n//           if (t !== toggle) {\n//             t.checked = false;\n//             // Reset the overflow for other content areas that are not active\n//             t.nextElementSibling.nextElementSibling.style.overflow = 'hidden';\n//           }\n//         });\n//       });\n//     });\n//   }\n// });\n\n\n\n\n//# sourceURL=webpack:///./modules/accordian.js?");

/***/ }),

/***/ "./modules/background-image.js":
/*!*************************************!*\
  !*** ./modules/background-image.js ***!
  \*************************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n//--------------------------------------------------------\n//Background image\n//--------------------------------------------------------\n\nwindow.addEventListener(\"DOMContentLoaded\", function () {\n  var imageContainers = document.querySelectorAll(\".image-container\");\n  imageContainers.forEach(function (container) {\n      var img = container.querySelector(\"img\");\n      var imgUrl = img.src;\n      container.style.backgroundImage = \"url(\" + imgUrl + \")\";\n      container.style.backgroundSize = \"cover\";\n      container.style.backgroundPosition = \"center center\";\n      img.style.display = \"none\";\n  });\n});\n\n\n\n//# sourceURL=webpack:///./modules/background-image.js?");

/***/ }),

/***/ "./modules/carousel.js":
/*!*****************************!*\
  !*** ./modules/carousel.js ***!
  \*****************************/
/***/ (() => {

eval("document.addEventListener(\"DOMContentLoaded\", () => {\n    const slider = document.querySelector('.slider');\n  \n    // Check if the slider element exists\n    if (slider) {\n      const slidesContainer = slider.querySelector('.slides-container');\n      const originalSlides = Array.from(slidesContainer.children);\n      const totalOriginalSlides = originalSlides.length;\n      const nextButton = slider.querySelector('.next');\n      const prevButton = slider.querySelector('.prev');\n    \n      // Clone the first and last slides to create an infinite loop effect\n      const firstSlideClone = originalSlides[0].cloneNode(true);\n      const lastSlideClone = originalSlides[totalOriginalSlides - 1].cloneNode(true);\n      slidesContainer.insertBefore(lastSlideClone, originalSlides[0]);\n      slidesContainer.appendChild(firstSlideClone);\n    \n      let currentIndex = 1; // Start from the first original slide (not the clone)\n      let isTransitioning = false;\n      let autoRotate;\n    \n      // Function to start auto-rotating\n      function startAutoRotate() {\n        autoRotate = setInterval(moveToNext, 4000);\n      }\n    \n      // Function to stop auto-rotating\n      function stopAutoRotate() {\n        clearInterval(autoRotate);\n      }\n    \n      // Initialize position to the first original slide\n      slidesContainer.style.transition = 'none';\n      slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n    \n      // Re-enable transitions after initial positioning\n      setTimeout(() => {\n        slidesContainer.style.transition = 'transform 0.5s ease';\n      }, 0);\n    \n      function updateSlidePosition() {\n        slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n      }\n    \n      function moveToNext() {\n        if (isTransitioning) return;\n        currentIndex++;\n        isTransitioning = true;\n        updateSlidePosition();\n      }\n    \n      function moveToPrev() {\n        if (isTransitioning) return;\n        currentIndex--;\n        isTransitioning = true;\n        updateSlidePosition();\n      }\n    \n      slidesContainer.addEventListener('transitionend', () => {\n        if (currentIndex >= totalOriginalSlides + 1) {\n          slidesContainer.style.transition = 'none';\n          currentIndex = 1;\n          slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n          setTimeout(() => {\n            slidesContainer.style.transition = 'transform 0.5s ease';\n          }, 0);\n        } else if (currentIndex === 0) {\n          slidesContainer.style.transition = 'none';\n          currentIndex = totalOriginalSlides;\n          slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n          setTimeout(() => {\n            slidesContainer.style.transition = 'transform 0.5s ease';\n          }, 0);\n        }\n        isTransitioning = false;\n      });\n    \n      nextButton.addEventListener('click', moveToNext);\n      prevButton.addEventListener('click', moveToPrev);\n    \n      // Event listeners to stop/start auto-rotating\n      slidesContainer.addEventListener('mouseenter', stopAutoRotate);\n      slidesContainer.addEventListener('mouseleave', startAutoRotate);\n      nextButton.addEventListener('mouseenter', stopAutoRotate);\n      nextButton.addEventListener('mouseleave', startAutoRotate);\n      prevButton.addEventListener('mouseenter', stopAutoRotate);\n      prevButton.addEventListener('mouseleave', startAutoRotate);\n    \n      // Start auto-rotating\n      startAutoRotate();\n    }\n  });\n  \n  \n  //was fixed but with console error. above to test fixing that.\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     const slider = document.querySelector('.slider');\n//     const slidesContainer = slider.querySelector('.slides-container');\n//     const originalSlides = Array.from(slidesContainer.children);\n//     const totalOriginalSlides = originalSlides.length;\n//     const nextButton = slider.querySelector('.next');\n//     const prevButton = slider.querySelector('.prev');\n  \n//     // Clone the first and last slides to create an infinite loop effect\n//     const firstSlideClone = originalSlides[0].cloneNode(true);\n//     const lastSlideClone = originalSlides[totalOriginalSlides - 1].cloneNode(true);\n//     slidesContainer.insertBefore(lastSlideClone, originalSlides[0]);\n//     slidesContainer.appendChild(firstSlideClone);\n  \n//     let currentIndex = 1; // Start from the first original slide (not the clone)\n//     let isTransitioning = false;\n//     let autoRotate;\n  \n//     // Function to start auto-rotating\n//     function startAutoRotate() {\n//       autoRotate = setInterval(moveToNext, 4000);\n//     }\n  \n//     // Function to stop auto-rotating\n//     function stopAutoRotate() {\n//       clearInterval(autoRotate);\n//     }\n  \n//     // Initialize position to the first original slide\n//     slidesContainer.style.transition = 'none';\n//     slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n  \n//     // Re-enable transitions after initial positioning\n//     setTimeout(() => {\n//       slidesContainer.style.transition = 'transform 0.5s ease';\n//     }, 0);\n  \n//     function updateSlidePosition() {\n//       slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n//     }\n  \n//     function moveToNext() {\n//       if (isTransitioning) return;\n//       currentIndex++;\n//       isTransitioning = true;\n//       updateSlidePosition();\n//     }\n  \n//     function moveToPrev() {\n//       if (isTransitioning) return;\n//       currentIndex--;\n//       isTransitioning = true;\n//       updateSlidePosition();\n//     }\n  \n//     slidesContainer.addEventListener('transitionend', () => {\n//       if (currentIndex >= totalOriginalSlides + 1) {\n//         slidesContainer.style.transition = 'none';\n//         currentIndex = 1;\n//         slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n//         setTimeout(() => {\n//           slidesContainer.style.transition = 'transform 0.5s ease';\n//         }, 0);\n//       } else if (currentIndex === 0) {\n//         slidesContainer.style.transition = 'none';\n//         currentIndex = totalOriginalSlides;\n//         slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n//         setTimeout(() => {\n//           slidesContainer.style.transition = 'transform 0.5s ease';\n//         }, 0);\n//       }\n//       isTransitioning = false;\n//     });\n  \n//     nextButton.addEventListener('click', moveToNext);\n//     prevButton.addEventListener('click', moveToPrev);\n  \n//     // Event listeners to stop/start auto-rotating\n//     slidesContainer.addEventListener('mouseenter', stopAutoRotate);\n//     slidesContainer.addEventListener('mouseleave', startAutoRotate);\n//     nextButton.addEventListener('mouseenter', stopAutoRotate);\n//     nextButton.addEventListener('mouseleave', startAutoRotate);\n//     prevButton.addEventListener('mouseenter', stopAutoRotate);\n//     prevButton.addEventListener('mouseleave', startAutoRotate);\n  \n//     // Start auto-rotating\n//     startAutoRotate();\n//   });\n  \n//   // /*\n// //   * zenCSS Beta v2.0.0 (https://zencss.com/)\n// //   * Copyright 2023-2023 Shaun Mackey\n// //   * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n// //   */\n\n\n//# sourceURL=webpack:///./modules/carousel.js?");

/***/ }),

/***/ "./modules/custom-elements.js":
/*!************************************!*\
  !*** ./modules/custom-elements.js ***!
  \************************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n// ----------------------------------------\n// Define zenCSS elements for use in JS\n// ----------------------------------------\n\n// Define z-container custom element\nclass ZContainer extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n\ncustomElements.define(\"z-container\", ZContainer);\n\n// Define z-row custom element\nclass ZRow extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n\ncustomElements.define(\"z-row\", ZRow);\n\n// Define z-col custom element\nclass ZCol extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n\ncustomElements.define(\"z-col\", ZCol);\n\n//# sourceURL=webpack:///./modules/custom-elements.js?");

/***/ }),

/***/ "./modules/dark-mode.js":
/*!******************************!*\
  !*** ./modules/dark-mode.js ***!
  \******************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\n//--------------------------------------------------------\n//  Toggle Dark Mode Option\n//--------------------------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  function toggleDarkMode() {\n      const zenElements = document.querySelectorAll(\".zen\");\n\n      zenElements.forEach((element) => {\n          element.classList.toggle(\"zen-dark\");\n      });\n\n      const isDarkModeEnabled = Array.from(zenElements).some((element) =>\n          element.classList.contains(\"zen-dark\")\n      );\n      localStorage.setItem(\"darkMode\", isDarkModeEnabled);\n  }\n\n  const toggleButton = document.getElementById(\"toggleDarkMode\");\n  if (toggleButton) {\n      toggleButton.addEventListener(\"click\", toggleDarkMode);\n  }\n\n  const storedDarkMode = localStorage.getItem(\"darkMode\");\n  if (storedDarkMode === \"true\") {\n      const zenElements = document.querySelectorAll(\".zen\");\n      zenElements.forEach((element) => {\n          element.classList.add(\"zen-dark\");\n      });\n  }\n});\n\n\n//# sourceURL=webpack:///./modules/dark-mode.js?");

/***/ }),

/***/ "./modules/dropdown.js":
/*!*****************************!*\
  !*** ./modules/dropdown.js ***!
  \*****************************/
/***/ (() => {

eval("/*\n* zenCSS v1.0.0 (https://zencss.com/)\n* Copyright 2023-2023 Shaun Mackey\n* Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n*/\n \n  //-------------------------------------\n  // Dropdown\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', function () {\n    var dropdownLinks = document.querySelectorAll('.dropdown-link');\n\n    dropdownLinks.forEach(function(link) {\n        // Create and insert the caret\n        var caret = document.createElement('div');\n        caret.className = 'caret-up';\n        link.parentNode.insertBefore(caret, link.nextSibling);\n\n        link.addEventListener('click', function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            // Check if the current dropdown is already open\n            var isCurrentDropdownOpen = link.nextElementSibling.nextElementSibling.style.display === \"block\";\n            // Close all dropdowns\n            closeAllDropdowns();\n            // Toggle the current dropdown if it was not open\n            if (!isCurrentDropdownOpen) {\n                toggleDropdown(link.nextElementSibling.nextElementSibling, caret);\n            }\n        });\n    });\n});\n\nfunction toggleDropdown(dropdownContent, caret) {\n    dropdownContent.style.display = dropdownContent.style.display === \"block\" ? \"none\" : \"block\";\n    caret.style.display = caret.style.display === \"block\" ? \"none\" : \"block\";\n}\n\nfunction closeAllDropdowns() {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var carets = document.getElementsByClassName(\"caret-up\");\n    for (var i = 0; i < dropdowns.length; i++) {\n        dropdowns[i].style.display = \"none\";\n        carets[i].style.display = \"none\";\n    }\n}\n\nwindow.onclick = function(event) {\n    if (!event.target.matches('.dropdown-link')) {\n        closeAllDropdowns();\n    }\n};\n\n\n\n\n//# sourceURL=webpack:///./modules/dropdown.js?");

/***/ }),

/***/ "./modules/exit-intent.js":
/*!********************************!*\
  !*** ./modules/exit-intent.js ***!
  \********************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\n\n// ----------------------------------------\n// Exit Intent\n// ----------------------------------------\n// Get the modal\nvar modal = document.querySelector(\".exit\");\n\n// Function to show the modal if conditions are met\nfunction tryToShowModal() {\n    if (modal && shouldShowModal() && !modalIsDisplayed()) {\n        modal.style.display = \"block\";\n    }\n}\n\n// Function to hide modal and set a flag in local storage\nfunction closeModal() {\n    if (modal) {\n        modal.style.display = \"none\";\n        // Set the flag in local storage with the current timestamp\n        localStorage.setItem('modalClosed', new Date().getTime());\n    }\n}\n\n// Check if the modal is currently displayed\nfunction modalIsDisplayed() {\n    return modal.style.display === \"block\";\n}\n\n// Get the <span> element that closes the modal\nvar span = document.querySelector(\".close\");\n\n// When the user clicks on <span> (x), close the modal\nif (span) {\n    span.onclick = closeModal;\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    if (event.target == modal) {\n        closeModal();\n    }\n};\n\n// Check local storage to see if we should show the modal\nfunction shouldShowModal() {\n    var modalClosedTime = localStorage.getItem('modalClosed');\n    if (modalClosedTime) {\n        var now = new Date();\n        var daysPassed = (now.getTime() - parseInt(modalClosedTime, 10)) / (1000 * 3600 * 24);\n        return daysPassed >= 7;\n    }\n    return true;\n}\n\n// Trigger the modal after 8 seconds if the user hasn't closed it already\nsetTimeout(function() {\n    document.addEventListener('mousemove', function(e) {\n        if (e.clientY <= 5) {\n            tryToShowModal();\n        }\n    });\n}, 8000);\n\n\n \n\n\n//# sourceURL=webpack:///./modules/exit-intent.js?");

/***/ }),

/***/ "./modules/full-screen-card.js":
/*!*************************************!*\
  !*** ./modules/full-screen-card.js ***!
  \*************************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\n// ----------------------------------------\n// Hack for card with full screen image ;)\n// ----------------------------------------\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var cards = document.querySelectorAll(\".card\");\n\n  cards.forEach(function (card) {\n      var image = card.querySelector(\".img-full\");\n      if (image) {\n          image.addEventListener('load', function() {\n              var imageHeight = image.offsetHeight + 20;\n              card.style.paddingTop = imageHeight + \"px\";\n          });\n          \n          // If the image is already loaded (cached images), manually trigger the load event\n          if (image.complete) {\n              image.dispatchEvent(new Event('load'));\n          }\n      }\n  });\n});\n\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//   var cards = document.querySelectorAll(\".card\");\n\n//   cards.forEach(function (card) {\n//       var image = card.querySelector(\".img-full\");\n//       if (image) {\n//           var imageHeight = image.offsetHeight + 13;\n//           card.style.paddingTop = imageHeight + \"px\" ;\n//       }\n//   });\n// });\n\n \n\n\n//# sourceURL=webpack:///./modules/full-screen-card.js?");

/***/ }),

/***/ "./modules/misc.js":
/*!*************************!*\
  !*** ./modules/misc.js ***!
  \*************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n\n  //-------------------------------------\n  // Dynamic year in footer\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', (event) => {\n    const yearSpan = document.getElementById('current-year');\n    if (yearSpan) {\n      const currentYear = new Date().getFullYear();\n      yearSpan.textContent = currentYear;\n    }\n  });\n  \n  //-------------------------------------\n  // Heart toggle\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', function () {\n    var iconToggles = document.querySelectorAll('.icon-toggle');\n\n    iconToggles.forEach(function(toggle) {\n        toggle.addEventListener('click', function () {\n            var iconOff = this.querySelector('.icon-off');\n            var iconOn = this.querySelector('.icon-on');\n\n            // Toggle the 'show' class\n            iconOff.classList.toggle('show');\n            iconOn.classList.toggle('show');\n        });\n    });\n});\n\n\n\n// New stuff here after modules were created. If we need to revert, include this stuff. \ndocument.querySelectorAll('.accordion-toggle').forEach(item => {\n  item.addEventListener('click', event => {\n      event.preventDefault();\n\n      const contentId = item.getAttribute('aria-controls');\n      const content = document.getElementById(contentId);\n\n      // Close other expanded contents\n      document.querySelectorAll('.expanded-content').forEach(el => {\n          if (el.id !== contentId) {\n              el.classList.remove('show');\n              el.style.overflowY = 'hidden';\n          }\n      });\n\n      // Toggle current content\n      content.classList.toggle('show');\n\n      setTimeout(() => {\n          if (content.scrollHeight > content.clientHeight) {\n              content.style.overflowY = 'auto';\n          } else {\n              content.style.overflowY = 'hidden';\n          }\n      }, 500); // Match this with your CSS transition duration\n  });\n});\n\n\n  //-------------------------------------\n  // Corner Popup\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', function() {\n    var button = document.querySelector('.corner-popup-button');\n    var popup = document.querySelector('.corner-popup-window');\n\n    if (button && popup) {\n        button.addEventListener('click', function() {\n            popup.classList.toggle('hidden');\n            console.log(\"Button clicked\");\n        });\n    }\n});\n\n  //-------------------------------------\n  // Responsive Table\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', () => {\n    // Function to apply data labels to a table\n    function applyDataLabelsToTable(table) {\n        // Get all the headers from the direct child thead of the table\n        const headers = Array.from(table.querySelectorAll(':scope > thead > tr > th')).map(th => th.textContent.trim());\n\n        // Iterate over each row in the direct child tbody of the table\n        table.querySelectorAll(':scope > tbody > tr').forEach(row => {\n            // Get all cells (td) in this row\n            row.querySelectorAll(':scope > td').forEach((cell, index) => {\n                // Assign the corresponding header text to the data-label attribute of the cell\n                if (headers[index]) {\n                    cell.setAttribute('data-label', headers[index]);\n                }\n            });\n        });\n    }\n\n    // Select all tables with class 'responsive-table' and apply data labels to each\n    document.querySelectorAll('.responsive-table').forEach(applyDataLabelsToTable);\n});\n\n  //-------------------------------------\n  // Lazy Load Test - WIP\n  //-------------------------------------\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const lazyLoadImages = document.querySelectorAll(\"img.lazy-load\");\n  \n    if (lazyLoadImages.length > 0) {\n      const imageObserver = new IntersectionObserver(function(entries, observer) {\n        entries.forEach(function(entry) {\n          if (entry.isIntersecting) {\n            const image = entry.target;\n            image.src = image.dataset.src;\n            image.classList.remove(\"lazy-load\");\n            imageObserver.unobserve(image);\n          }\n        });\n      });\n  \n      lazyLoadImages.forEach(function(image) {\n        imageObserver.observe(image);\n      });\n    }\n  });\n  \n   //-------------------------------------\n  // Tabbed Card\n  //-------------------------------------\n\n  // JavaScript function to show/hide tab content\n  function showTab(tabNumber) {\n    const tabbedCard = document.querySelector('.tabbed-card');\n    if (tabbedCard) {\n        const tabs = tabbedCard.querySelectorAll('.tab');\n        const tabContents = tabbedCard.querySelectorAll('.tab-content');\n        \n        tabs.forEach((tab, index) => {\n            if (index + 1 === tabNumber) {\n                tab.classList.add('active');\n                tabContents[index].classList.add('active');\n            } else {\n                tab.classList.remove('active');\n                tabContents[index].classList.remove('active');\n            }\n        });\n    }\n}\n\n// Attach click event listeners to tabs\ndocument.addEventListener('DOMContentLoaded', function() {\n    const tabs = document.querySelectorAll('.tab');\n    tabs.forEach((tab) => {\n        tab.addEventListener('click', function() {\n            const tabNumber = parseInt(tab.getAttribute('data-tab'));\n            showTab(tabNumber);\n        });\n    });\n});\n\n  //-------------------------------------\n  // Pattern Interrupt\n  //-------------------------------------\n//   document.addEventListener('DOMContentLoaded', function() {\n//     var modalShown = false;\n//     var modal = document.querySelector('.pattern-interrupt');\n//     var modal2 = document.querySelector('.modal');\n\n//     function showModal() {\n//         if (!modal) return; // Exit if no modal found\n\n//         // Center the modal in the viewport\n//         modal.style.display = 'block';\n//         modal2.style.display = 'block';\n//         modal.style.position = 'fixed'; // Fixed position\n//         modal.style.top = '50%'; // Center vertically\n//         modal.style.left = '50%'; // Center horizontally\n//         modal.style.transform = 'translate(-50%, -50%)'; // Adjust for modal's dimensions\n\n//         modalShown = true;\n//     }\n\n//     function checkScroll() {\n//         if (modalShown) return; // Skip if the modal is already shown\n\n//         var scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n//         var totalHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n//         var scrolledPercentage = (scrollPosition / totalHeight) * 100;\n\n//         if (scrolledPercentage > 10) {\n//             showModal();\n//         }\n//     }\n\n//     // Attach the scroll event listener only if the modal exists\n//     if (modal) {\n//         window.addEventListener('scroll', checkScroll);\n//     }\n// });\n\n  //-------------------------------------\n  // Dynamic Navigation\n  //-------------------------------------\n//   document.addEventListener('DOMContentLoaded', function() {\n//     const header = document.querySelector('.header-sticky.slide-down');\n//     console.log(\"Script running\");\n//     if (header) {\n//       fetch('../docs/navigation.html')  // Assuming navigation.html is in the /docs folder\n//         .then(response => response.text())\n//         .then(data => {\n//           header.innerHTML = data;\n//         })\n//         .catch(error => console.error('Error loading navigation:', error));\n//     }\n//   });\n\n//   //-------------------------------------\n//   // Video Player\n//   //-------------------------------------\n\n\n\n//   class VideoPlayer extends HTMLElement {\n//     constructor() {\n//         super();\n//         const shadowRoot = this.attachShadow({ mode: 'open' });\n\n//         const style = document.createElement('style');\n//         style.textContent = `\n       \n//         `;\n\n//         const container = document.createElement('div');\n//         container.className = 'video-container';\n\n//         const video = document.createElement('video');\n//         video.className = 'video-player';\n//         video.controls = true;\n\n//         const src = this.getAttribute('src');\n//         if (src) {\n//             const source = document.createElement('source');\n//             source.src = src;\n//             source.type = 'video/mp4';\n//             video.appendChild(source);\n//         } else {\n//             console.error('Video source not provided for <video-player>.');\n//         }\n\n//         container.appendChild(video);\n//         shadowRoot.appendChild(style);\n//         shadowRoot.appendChild(container);\n//     }\n// }\n\n// customElements.define('video-player', VideoPlayer);\n\n//# sourceURL=webpack:///./modules/misc.js?");

/***/ }),

/***/ "./modules/mobile-nav.js":
/*!*******************************!*\
  !*** ./modules/mobile-nav.js ***!
  \*******************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n\n// //--------------------------------------------------------\n// // Mobile Nav\n// //--------------------------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  const hamburgerButton = document.getElementById(\"hamburger-button\");\n  const closeButton = document.getElementById(\"close-button\");\n  const nav = document.querySelector(\"nav\");\n  const navLinks = document.querySelectorAll(\".nav-link\");\n\n  const toggleMenu = () => {\n      nav.style.left = nav.style.left === \"0px\" ? \"-250px\" : \"0px\";\n  };\n\n  if (hamburgerButton && closeButton && nav) {\n      hamburgerButton.addEventListener(\"click\", toggleMenu);\n      closeButton.addEventListener(\"click\", toggleMenu);\n\n      navLinks.forEach((link) => {\n      //    link.addEventListener(\"click\", toggleMenu); // Use toggleMenu to close the menu\n      });\n  }\n});\n\n\n//# sourceURL=webpack:///./modules/mobile-nav.js?");

/***/ }),

/***/ "./modules/modal.js":
/*!**************************!*\
  !*** ./modules/modal.js ***!
  \**************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n//--------------------------------------------------------\n// Modal\n//--------------------------------------------------------\n\nclass ZModal extends HTMLElement {\n  constructor() {\n      super();\n      this.attachShadow({ mode: \"open\" });\n      this.render();\n  }\n\n  connectedCallback() {\n      this.shadowRoot\n          .querySelector(\".close\")\n          .addEventListener(\"click\", () => {\n              this.close();\n          });\n      this.shadowRoot\n          .querySelector(\".modal\")\n          .addEventListener(\"click\", (event) => {\n              if (event.target === event.currentTarget) {\n                  this.close();\n              }\n          });\n      document.addEventListener(\"click\", (event) => {\n          if (event.target.classList.contains(\"modal-close\")) {\n              this.close();\n          }\n\n          document.addEventListener(\"keydown\", (event) => {\n            if (event.key === \"Escape\") {\n              this.close();\n            }\n          });\n      });\n  \n      const openModalButton = document.querySelector(\".modal-open\");\n      if (openModalButton) {\n          openModalButton.addEventListener(\"click\", () => {\n              this.open();\n          });\n      }\n  }\n      \n  open() {\n      this.shadowRoot.querySelector(\".modal\").style.display = \"flex\";\n  }\n\n  close() {\n      this.shadowRoot.querySelector(\".modal\").style.display = \"none\";\n  }\n\n  render() {\n      this.shadowRoot.innerHTML = `\n          <style>\n          .modal {\n              position: fixed;\n              z-index: 10000;\n              left: 0;\n              top: 0;\n              width: 100%;\n              height: 100%;\n              background-color: rgba(0, 0, 0, 0.8);\n              display: none;\n              align-items: center;\n              justify-content: center;\n          }\n          .modal-wrapper {\n              position: relative;\n              width: 80%;\n              border: 1px solid rgba(111,111,111,.35);\n              border-radius: var(--border-radius, 4px);\n              background-color: #f4f4f4;\n              color: #424242;\n              box-sizing: border-box;\n              max-width:500px;\n          }\n          \n          .modal-header {\n              display: flex;\n              justify-content: space-between;\n              padding: 0 20px;\n              border-bottom: 1px solid rgba(111,111,111,.35);\n          }\n          .modal-title {\n              margin: 0;\n              font-size: 1.5em;\n          }\n          .close {\n              color: var(--dark-color, #aaa);\n              font-size: 28px;\n              font-weight: bold;\n              cursor: pointer;\n              border: none;\n              background-color: transparent;\n              position:relative:\n\n          }\n          .close:hover,\n          .close:focus {\n              color: var(--cta-color, #f00);\n          }\n          .modal-body {\n              padding: 20px;\n              max-height: 300px;\n              overflow-y: auto;\n          }\n          .modal-footer {\n              display: flex;\n              justify-content: flex-end;\n              padding: 0 10px;\n              border-top: 1px solid rgba(111,111,111,.35);\n              margin-left: 10px;\n              margin-right: 10px;\n          }\n\n          @media only screen and (max-width: 767px) {\n              .modal-body {\n                  padding: 10px;\n                  max-height: 220px;\n\n              }\n              .modal-wrapper {\n                  width: 99%;\n                  max-width:100% !important;\n              }\n\n          }\n      </style>\n      <div class=\"modal\">\n          <div class=\"modal-wrapper\">\n              <div class=\"modal-header\">\n                  <slot name=\"title\"></slot>\n                  <div class=\"title-spacer\"></div>\n                  <button class=\"close\">&times;</button>\n              </div>\n              <div class=\"modal-body\">\n                  <slot></slot>\n              </div>\n              <div class=\"modal-footer\">\n                  <slot name=\"footer\">\n                      <button class=\"modal-close\">Close</button>\n                      <button class=\"modal-save\">Save</button>\n                  </slot>\n              </div>\n          </div>\n      </div>\n      `;\n  }\n  \n}\n\ncustomElements.define(\"z-modal\", ZModal);\n\n\n\n//# sourceURL=webpack:///./modules/modal.js?");

/***/ }),

/***/ "./modules/nested-containers.js":
/*!**************************************!*\
  !*** ./modules/nested-containers.js ***!
  \**************************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\n\n  //-------------------------------------\n  // Nested containers - kill parent padding + if i am a row, and im inide a container that i neted in a column, then i need to have my martin top and bottom set to 0\n  // BUG: Adding this functionality breaks convention with support for zentax and semantic. fix for semantic.\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', function () {\n    // Handle the padding for <z-col> elements\n    var cols = document.querySelectorAll('z-col');\n\n    cols.forEach(function (col) {\n        if (col.querySelector('z-container')) {\n            col.style.padding = '0';\n        }\n    });\n\n    // Handle the margin for <z-row> elements within <z-container> inside <z-col>\n    var rows = document.querySelectorAll('z-row');\n    rows.forEach(function (row) {\n        // Use closest to check if <z-row> is inside <z-container> and that <z-container> is inside <z-col>\n        var container = row.closest('z-container');\n        if (container && container.parentElement.tagName.toLowerCase() === 'z-col') {\n            // Set the top and bottom padding of <z-row> to 0\n            row.style.paddingTop = '0';\n            row.style.paddingBottom = '0';\n        }\n    });\n});\n\n\n//# sourceURL=webpack:///./modules/nested-containers.js?");

/***/ }),

/***/ "./modules/opacity-overrides.js":
/*!**************************************!*\
  !*** ./modules/opacity-overrides.js ***!
  \**************************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\n//--------------------------------------------------------\n// Bg-blur and opacity overrides\n//--------------------------------------------------------\n\nconst elements = document.querySelectorAll(\n  '[class*=\"bg-opaque\"], [class*=\"bg-blur\"]'\n);\nelements.forEach((element) => {\n  const descendants = element.querySelectorAll(\"*\");\n  descendants.forEach((descendant) => {\n      descendant.style.opacity = \"100%\";\n  });\n});\n\n\n//# sourceURL=webpack:///./modules/opacity-overrides.js?");

/***/ }),

/***/ "./modules/poll.js":
/*!*************************!*\
  !*** ./modules/poll.js ***!
  \*************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\n  //-------------------------------------\n  //Poll\n  //-------------------------------------\n  document.addEventListener('DOMContentLoaded', function() {\n    var currentStep = 1;\n    var results = { a: 0, b: 0, c: 0, d: 0 };\n    \n    function updateStepDisplay(step) {\n      var steps = document.querySelectorAll('.wizard-step');\n      steps.forEach(function(stepDiv) {\n        stepDiv.classList.remove('active');\n      });\n      document.querySelector('#step-' + step).classList.add('active');\n    }\n  \n    function handleOptionSelect(event) {\n      var selectedOption = event.target.value;\n      results[selectedOption]++;\n      if(currentStep < 4) {\n        currentStep++;\n        updateStepDisplay(currentStep);\n      } else {\n        // Call the showResult function immediately after the last selection\n        showResult();\n      }\n    }\n  \n    function showResult() {\n        // Remove the active class from all steps\n        var steps = document.querySelectorAll('.wizard-step');\n        steps.forEach(function(step) {\n          step.classList.remove('active');\n        });\n      \n        // Calculate the most chosen answer\n        var max = Math.max(...Object.values(results));\n        var mostChosenResults = Object.keys(results).filter(function(key) {\n          return results[key] === max;\n        });\n      \n        // Take the first result if there's a tie\n        var mostChosen = mostChosenResults[0];\n        var resultElement = document.querySelector('#result-types [data-result=\"' + mostChosen + '\"]');\n        var resultContent = resultElement ? resultElement.innerHTML : mostChosen;\n      \n        // Update the result div and make the result visible\n        var resultDiv = document.getElementById('result-text');\n        if(resultDiv) {\n          resultDiv.innerHTML = resultContent;\n        }\n        var resultContainer = document.getElementById('result');\n        if(resultContainer) {\n          resultContainer.classList.add('active'); // Ensure this class makes the element visible\n        }\n      }\n      \n    // Attaching change event listeners to radio buttons\n    var wizard = document.querySelector('.wizard');\n    if(wizard) {\n      var radioButtons = wizard.querySelectorAll('input[type=\"radio\"]');\n      radioButtons.forEach(function(radioButton) {\n        radioButton.addEventListener('change', handleOptionSelect);\n      });\n    }\n  });\n  \n\n\n//# sourceURL=webpack:///./modules/poll.js?");

/***/ }),

/***/ "./modules/spin.js":
/*!*************************!*\
  !*** ./modules/spin.js ***!
  \*************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n//-------------------------------------\n//Spin\n  //-------------------------------------\n\n// This function will apply the spinning effect to the spinner if it exists\nfunction startSpinning() {\n  // Select the spinner element\n  var spinner = document.querySelector('.rotate-spinner');\n  \n  // Check if the spinner exists to avoid errors\n  if (spinner) {\n    // Apply the CSS animation using inline styles\n    spinner.style.animation = 'spin 1s linear infinite';\n  }\n}\n\n// This function will start the spinning when the document is loaded, if the spinner exists\ndocument.addEventListener('DOMContentLoaded', startSpinning);\n\n\n\n\n//# sourceURL=webpack:///./modules/spin.js?");

/***/ }),

/***/ "./modules/star-component.js":
/*!***********************************!*\
  !*** ./modules/star-component.js ***!
  \***********************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n\n// ----------------------------------------\n// Star component\n// ----------------------------------------\nclass StarComponent extends HTMLElement {\n  constructor() {\n      super();\n      this.attachShadow({ mode: \"open\" });\n      this.render();\n  }\n\n  static get observedAttributes() {\n      return [\"stars\", \"half\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n      this.render();\n  }\n\n  render() {\n      const starCount = parseInt(this.getAttribute(\"stars\")) || 1;\n      const half = this.getAttribute(\"half\") === \"true\";\n      const fragment = document.createDocumentFragment();\n\n      for (let i = 0; i < starCount; i++) {\n          const starImg = document.createElement(\"img\");\n          starImg.src = \"../../img/icons/alerts/star-solid.svg\";\n          starImg.alt = \"\";\n          starImg.className = \"icon icon-gold\";\n          fragment.appendChild(starImg);\n      }\n\n      if (half && starCount < 5) {\n          const halfStarImg = document.createElement(\"img\");\n          halfStarImg.src =\n              \"../../img/icons/alerts/star-half-stroke-regular.svg\";\n          halfStarImg.alt = \"\";\n          halfStarImg.className = \"icon icon-gold\";\n          fragment.appendChild(halfStarImg);\n      }\n\n      this.shadowRoot.innerHTML = `\n          <style>\n              .icon {\n                  width: 24px;\n                  height: 24px;\n              }\n      .icon-gold{\n        width: 9px;\n        filter: invert(85%) sepia(36%) saturate(2389%) hue-rotate(345deg) brightness(96%) contrast(97%);\n        }\n        \n        .icon-silver{\n        width: 9px;\n        filter: invert(50%) sepia(8%) saturate(15%) hue-rotate(314deg) brightness(103%) contrast(84%);\n        }\n          </style>\n      `;\n      this.shadowRoot.appendChild(fragment);\n  }\n}\n\ncustomElements.define(\"star-component\", StarComponent);\n\n\n//# sourceURL=webpack:///./modules/star-component.js?");

/***/ }),

/***/ "./modules/tabs.js":
/*!*************************!*\
  !*** ./modules/tabs.js ***!
  \*************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n\n// ----------------------------------------\n// Tabs\n// ----------------------------------------\ndocument.addEventListener('DOMContentLoaded', function () {\n  const tabs = document.querySelectorAll('.tab-nav .item');\n\n  if(tabs.length > 0) {\n      function removeCurrentClass() {\n          tabs.forEach(tab => {\n              tab.classList.remove('current');\n          });\n      }\n\n      function setCurrentClass(event) {\n          event.preventDefault();\n          removeCurrentClass();\n          event.target.classList.add('current');\n      }\n\n      tabs.forEach(tab => {\n          tab.addEventListener('click', setCurrentClass);\n      });\n  }\n});\n\n\n//# sourceURL=webpack:///./modules/tabs.js?");

/***/ }),

/***/ "./modules/test-mode.js":
/*!******************************!*\
  !*** ./modules/test-mode.js ***!
  \******************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n//--------------------------------------------------------\n//Toggle  test mode\n//--------------------------------------------------------\n\nvar toggleButton = document.getElementById(\"toggleButton\");\n\nif (toggleButton) {\n    toggleButton.addEventListener(\"click\", function () {\n        const toggleClassOnElements = (selector, className) => {\n            const elements = document.querySelectorAll(selector);\n            elements.forEach((element) => {\n                element.classList.toggle(className);\n            });\n        };\n\n        const selectorsAndClasses = [\n            [\"z-container\", \"z-container-outline-on\"],\n            [\"z-container-fluid\", \"z-container-fluid-outline-on\"],\n            [\"z-row\", \"z-row-outline-on\"],\n            [\"z-col\", \"z-col-outline-on\"],\n            [\"p\", \"p-outline-on\"],\n            [\"h1\", \"h1-outline-on\"],\n            [\"h2\", \"h2-outline-on\"],\n            [\"h3\", \"h3-outline-on\"],\n            [\"h4\", \"h4-outline-on\"],\n            [\"h5\", \"h5-outline-on\"],\n            [\"h6\", \"h6-outline-on\"],\n            [\".center-line\", \"center-line-outline-on\"],\n        ];\n\n        selectorsAndClasses.forEach(([selector, className]) => {\n            toggleClassOnElements(selector, className);\n        });\n    });\n} \n\n\n//# sourceURL=webpack:///./modules/test-mode.js?");

/***/ }),

/***/ "./modules/wizard.js":
/*!***************************!*\
  !*** ./modules/wizard.js ***!
  \***************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n \n// ----------------------------------------\n// Wizard\n// ----------------------------------------\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  const steps = document.querySelectorAll(\".wizard-step\");\n  const navItems = document.querySelectorAll(\".wizard-nav\");\n\n  if (steps.length > 0 && navItems.length > 0) {\n      let currentStep = 1;\n      const totalSteps = steps.length;\n\n      function goToStep(stepNumber) {\n          steps.forEach(step => {\n              step.style.display = 'none'; // Hide all steps\n          });\n          document.getElementById(`step-${stepNumber}`).style.display = 'block'; // Show the desired step\n\n          // Update the current class on pagination\n          navItems.forEach(item => {\n              if (item.dataset.step == stepNumber.toString()) {\n                  item.classList.add('current');\n              } else {\n                  item.classList.remove('current');\n              }\n          });\n      }\n\n      navItems.forEach(item => {\n          item.addEventListener('click', (e) => {\n              e.preventDefault();\n              let direction = item.dataset.direction;\n              if (direction) {\n                  if (direction === 'next' && currentStep < totalSteps) {\n                      currentStep++;\n                  } else if (direction === 'prev' && currentStep > 1) {\n                      currentStep--;\n                  }\n              } else if (item.dataset.step) {\n                  currentStep = parseInt(item.dataset.step);\n              }\n              goToStep(currentStep);\n          });\n      });\n\n      // Initialize the wizard to the first step\n      goToStep(currentStep);\n  }\n});\n\n\n\n//# sourceURL=webpack:///./modules/wizard.js?");

/***/ }),

/***/ "./optional/cookie-consent.js":
/*!************************************!*\
  !*** ./optional/cookie-consent.js ***!
  \************************************/
/***/ (() => {

eval("/*\n  * zenCSS Beta v2.0.0 (https://zencss.com/)\n  * Copyright 2022-2024 Shaun Mackey\n  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)\n  */\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    const banner = document.querySelector('.cookie-consent-banner');\n\n    // Check if the banner element exists\n    if (banner) {\n        const acceptBtn = document.querySelector('.accept-cookies');\n        banner.style.zIndex = '1100';\n\n        // Check if cookies are already accepted\n        if (!localStorage.getItem('cookies-accepted')) {\n            banner.style.display = 'block';  // Show banner if cookies not accepted\n        }\n\n        // Event listener for accept button\n        if (acceptBtn) {\n            acceptBtn.addEventListener('click', () => {\n                localStorage.setItem('cookies-accepted', 'true');  // Set flag in local storage\n                banner.style.display = 'none';  // Hide banner\n            });\n        }\n    }\n});\n\n\n//# sourceURL=webpack:///./optional/cookie-consent.js?");

/***/ }),

/***/ "./optional/image-gallery.js":
/*!***********************************!*\
  !*** ./optional/image-gallery.js ***!
  \***********************************/
/***/ (() => {

eval("function preloadImage(src) {\n    const img = new Image();\n    img.src = src;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gallery = document.querySelector('.image-gallery');\n    const modal = document.querySelector('z-modal');\n    const paginationNav = document.querySelector('.pagination-nav');\n\n    if (gallery && modal && paginationNav) {\n        let currentPage = 1;\n        const imagesPerPage = 15;\n        let currentModalIndex = 0;\n        const imageWrappers = [];\n\n        Array.from(gallery.children).forEach((img, index) => {\n            const wrapper = document.createElement('div');\n            wrapper.classList.add('lazy-load'); // using the lazy-load class\n            wrapper.style.display = index < imagesPerPage ? 'block' : 'none';\n            const clonedImg = img.cloneNode(true);\n            clonedImg.addEventListener('click', () => {\n                currentModalIndex = index;\n                openModal(clonedImg.src, clonedImg.getAttribute('data-text'), index);\n            });\n            wrapper.appendChild(clonedImg);\n            imageWrappers.push(wrapper);\n        });\n\n        const totalPages = Math.ceil(imageWrappers.length / imagesPerPage);\n\n        function updateImagesForPage(pageNumber) {\n            imageWrappers.forEach((wrapper, index) => {\n                const start = (pageNumber - 1) * imagesPerPage;\n                const end = start + imagesPerPage;\n                wrapper.style.display = index >= start && index < end ? 'block' : 'none';\n            });\n        }\n\n        function updatePaginationNav() {\n            paginationNav.innerHTML = '<a href=\"#\" class=\"item\" data-page=\"prev\">&laquo;</a>';\n            for (let i = 1; i <= totalPages; i++) {\n                const classCurrent = i === currentPage ? 'current' : '';\n                paginationNav.innerHTML += `<a href=\"#\" class=\"item ${classCurrent}\" data-page=\"${i}\">${i}</a>`;\n            }\n            paginationNav.innerHTML += '<a href=\"#\" class=\"item\" data-page=\"next\">&raquo;</a>';\n        }\n\n        function openModal(src, text, index) {\n            currentModalIndex = index;\n            const modalBody = modal.shadowRoot.querySelector('.modal-body');\n            const modalWrapper = modal.shadowRoot.querySelector('.modal-wrapper');\n            const modalHeader = modal.shadowRoot.querySelector('.modal-header');\n\n            if (modalBody && modalWrapper && modalHeader) {\n                const currentWidth = modalWrapper.clientWidth;\n                const currentHeight = modalWrapper.clientHeight;\n                modalWrapper.style.minWidth = `${currentWidth}px`;\n                modalWrapper.style.minHeight = `${currentHeight}px`;\n\n                modalBody.innerHTML = '';\n                const imageContainer = document.createElement('div');\n                imageContainer.style.display = 'flex';\n                imageContainer.style.position = 'relative';\n                imageContainer.style.justifyContent = 'center';\n\n                const prevArrow = document.createElement('div');\n                prevArrow.className = 'prev arrow theme-dark';\n                prevArrow.innerHTML = '❮';\n                prevArrow.style.cursor = 'pointer';\n                prevArrow.style.position = 'absolute';\n                prevArrow.style.top = '50%';\n                prevArrow.style.left = '0';\n                prevArrow.style.transform = 'translateY(-50%)';\n                prevArrow.onclick = function () {\n                    currentModalIndex = (currentModalIndex > 0) ? currentModalIndex - 1 : imageWrappers.length - 1;\n                    const newImg = imageWrappers[currentModalIndex].firstChild;\n                    openModal(newImg.src, newImg.getAttribute('data-text'), currentModalIndex);\n                };\n                imageContainer.appendChild(prevArrow);\n\n                const modalImage = document.createElement('img');\n                modalImage.onload = () => {\n                    modalWrapper.style.minWidth = '';\n                    modalWrapper.style.minHeight = '';\n                };\n                modalImage.src = src;\n                modalImage.style.maxWidth = '100%';\n                modalImage.style.maxHeight = '60vh';\n                modalImage.style.objectFit = 'contain';\n                modalImage.style.margin = 'auto';\n                imageContainer.appendChild(modalImage);\n\n                const nextArrow = document.createElement('div');\n                nextArrow.className = 'next arrow theme-dark';\n                nextArrow.innerHTML = '❯';\n                nextArrow.style.cursor = 'pointer';\n                nextArrow.style.position = 'absolute';\n                nextArrow.style.top = '50%';\n                nextArrow.style.right = '0';\n                nextArrow.style.transform = 'translateY(-50%)';\n                nextArrow.onclick = function () {\n                    currentModalIndex = (currentModalIndex < imageWrappers.length - 1) ? currentModalIndex + 1 : 0;\n                    const newImg = imageWrappers[currentModalIndex].firstChild;\n                    openModal(newImg.src, newImg.getAttribute('data-text'), currentModalIndex);\n                };\n                imageContainer.appendChild(nextArrow);\n\n                modalBody.appendChild(imageContainer);\n\n                const modalText = document.createElement('p');\n                modalText.textContent = text;\n                modalText.style.textAlign = 'center';\n                modalBody.appendChild(modalText);\n\n                modalBody.style.overflowY = 'auto';\n                modalBody.style.maxHeight = '80vh';\n                modalHeader.style.display = 'none';\n\n                modalWrapper.style.maxWidth = window.innerWidth >= 1070 ? '860px' : '80%';\n\n                const nextIndex = (index + 1) % imageWrappers.length;\n                const prevIndex = (index - 1 + imageWrappers.length) % imageWrappers.length;\n                preloadImage(imageWrappers[nextIndex].firstChild.src);\n                preloadImage(imageWrappers[prevIndex].firstChild.src);\n\n                modal.open();\n            }\n        }\n\n        paginationNav.addEventListener('click', function (event) {\n            event.preventDefault();\n            const target = event.target;\n            if (target.tagName === 'A' && target.dataset.page) {\n                let newPage = currentPage;\n                if (target.dataset.page === 'prev') {\n                    newPage = currentPage > 1 ? currentPage - 1 : totalPages;\n                } else if (target.dataset.page === 'next') {\n                    newPage = currentPage < totalPages ? currentPage + 1 : 1;\n                } else {\n                    newPage = parseInt(target.dataset.page);\n                }\n\n                if (newPage !== currentPage) {\n                    currentPage = newPage;\n                    updateImagesForPage(currentPage);\n                    updatePaginationNav();\n                }\n            }\n        });\n\n        window.addEventListener('resize', function () {\n            const modalWrapper = modal.shadowRoot.querySelector('.modal-wrapper');\n            if (modalWrapper) {\n                modalWrapper.style.maxWidth = window.innerWidth >= 1070 ? '860px' : '80%';\n            }\n        });\n\n        gallery.innerHTML = '';\n        imageWrappers.forEach(wrapper => gallery.appendChild(wrapper));\n        updateImagesForPage(currentPage);\n        updatePaginationNav();\n    }\n});\n\n\n//# sourceURL=webpack:///./optional/image-gallery.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./modules/custom-elements.js"]();
/******/ 	__webpack_modules__["./modules/nested-containers.js"]();
/******/ 	__webpack_modules__["./modules/carousel.js"]();
/******/ 	__webpack_modules__["./modules/dropdown.js"]();
/******/ 	__webpack_modules__["./optional/image-gallery.js"]();
/******/ 	__webpack_modules__["./modules/accordian.js"]();
/******/ 	__webpack_modules__["./modules/misc.js"]();
/******/ 	__webpack_modules__["./modules/opacity-overrides.js"]();
/******/ 	__webpack_modules__["./modules/dark-mode.js"]();
/******/ 	__webpack_modules__["./modules/background-image.js"]();
/******/ 	__webpack_modules__["./modules/mobile-nav.js"]();
/******/ 	__webpack_modules__["./modules/modal.js"]();
/******/ 	__webpack_modules__["./modules/star-component.js"]();
/******/ 	__webpack_modules__["./modules/full-screen-card.js"]();
/******/ 	__webpack_modules__["./modules/exit-intent.js"]();
/******/ 	__webpack_modules__["./modules/wizard.js"]();
/******/ 	__webpack_modules__["./modules/tabs.js"]();
/******/ 	__webpack_modules__["./modules/spin.js"]();
/******/ 	__webpack_modules__["./modules/poll.js"]();
/******/ 	__webpack_modules__["./optional/cookie-consent.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./modules/test-mode.js"]();
/******/ 	
/******/ })()
;