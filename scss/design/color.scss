//------------------------------------------ 
// Color Palettes - Light and dark master classes
//------------------------------------------ 

//brand palette dark
$primary-color-dark: darken($primary-color, 10%); 
$secondary-color-dark: darken($secondary-color, 10%); 
$accent-color-dark: darken($accent-color, 10%); 
$cta-color-dark: darken($cta-color, 10%); 

//brand palette light
$primary-color-light: lighten($primary-color, 10%); 
$secondary-color-light: lighten($secondary-color, 4%); 
$accent-color-light: lighten($accent-color, 10%); 
$cta-color-light: lighten($cta-color, 4%); 

// Generic palette dark
$red-dark: darken($red, 10%); 
$orange-dark: darken($orange, 8%); 
$yellow-dark: darken($yellow, 10%); 
$green-dark: darken($green, 5%); 
$blue-dark: darken($blue, 10%); 
$purple-dark: darken($purple, 10%); 



// Generic palette light
$red-light: lighten($red, 5%); 
$orange-light: lighten($orange, 10%); 
$yellow-light: lighten($yellow, 10%); 
$green-light: lighten($green, 10%); 
$blue-light: lighten($blue, 10%); 
$purple-light: lighten($purple, 5%); 


/* Generate border color classes */
$colors: (1: #F7F7F7,
  2: #D9D9D9,
  3: #A6A6A6,
  4: #737373,
  5: #404040,
  6: #0D0D0D
);

/* Define a map for colors */
$colors: ("primary": $primary-color,
  "secondary": $secondary-color,
  "accent": $accent-color,
  "cta": $cta-color,
  "ghost": $light-color,
  "red": $red,
  "orange": $orange,
  "yellow": $yellow,
  "green": $green,
  "blue": $blue,
  "purple": $purple,
  "white": white,
  "grey": $grey);

  //------------------------------------------ 
// Color logic
//------------------------------------------ 

/* Generate background color classes */
@each $color,
$value in $colors {
  .bg-#{$color} {
    background: $value !important;


    @if $value==white {
      color: $light-color !important;
    }

    @else if $value==$light-color {
      color: $dark-color !important;
    }
  }
}

/* Generate text color classes */
@each $color,
$value in $colors {
  .text-#{$color} {
    color: $value !important;
  }
}


@for $i from 1 through 6 {
  .border-#{$i} {
    border: 1px solid map-get($colors, $i);
  }
}

.border {
  border: 1px solid #c2c2c2;
}



$brand-color-variations: (
  "primary": ($primary-color-dark, $primary-color-light),
  "secondary": ($secondary-color-dark, $secondary-color-light),
  "accent": ($accent-color-dark, $accent-color-light),
  "cta": ($cta-color-dark, $cta-color-light)
);



// Define the color variations map for the generic color palette
$generic-color-variations: (
  "red": ($red-dark, $red-light),
  "orange": ($orange-dark, $orange-light),
  "yellow": ($yellow-dark, $yellow-light),
  "green": ($green-dark, $green-light),
  "blue": ($blue-dark, $blue-light),
  "purple": ($purple-dark, $purple-light),
);

// Generate the bg- classes for the brand color palette
@each $color-name, $color-values in $brand-color-variations {
  .bg-#{$color-name}-dark {
    background: nth($color-values, 1);
  }
  .bg-#{$color-name}-light {
    background: nth($color-values, 2);
  }
}

// Generate the bg- classes for the generic color palette
@each $color-name, $color-values in $generic-color-variations {
  .bg-#{$color-name}-dark {
    background: nth($color-values, 1);
  }
  .bg-#{$color-name}-light {
    background: nth($color-values, 2);
  }
}

// grey light and darks

$grey-colors: (
  "grey-1": #F7F7F7,
  "grey-2": #c7c6c6,
  "grey-3": #A6A6A6,
  "grey-4": #616161,
  "grey-5": #404040,
  "grey-6": #0D0D0D
);

//create base grey colors - bg and text
@each $color-name, $color-value in $grey-colors {
  
  .bg-#{$color-name} {
    background-color: $color-value;
  }

  .text-#{$color-name} {
    color: $color-value;
  }

}

// Convert the base grey colors to HSL
$grey-1: hsl(0, 0%, 97%);
$grey-2: hsl(0, 0%, 85%);
$grey-3: hsl(0, 0%, 65%);
$grey-4: hsl(0, 0%, 45%);
$grey-5: hsl(0, 0%, 25%);
$grey-6: hsl(0, 0%, 5%);

// Define the dark and light variations for each grey color
$grey-color-variations: (
  "grey-1": (hsl(0, 0%, 87%), hsl(0, 0%, 100%)),
  "grey-2": (hsl(0, 0%, 75%), hsl(0, 0%, 90%)),
  "grey-3": (hsl(0, 0%, 55%), hsl(0, 0%, 75%)),
  "grey-4": (hsl(0, 0%, 35%), hsl(0, 0%, 45%)),
  "grey-5": (hsl(0, 0%, 15%), hsl(0, 0%, 35%)),
  "grey-6": (hsl(0, 0%, 0%), hsl(0, 0%, 15%))
);

// Generate the bg- classes for the grey color variations
@each $color-name, $color-values in $grey-color-variations {
  .bg-#{$color-name}-dark {
    background: nth($color-values, 1);
  }
  .bg-#{$color-name}-light {
    background: nth($color-values, 2);
  }
}



// css stuff
.bg-opaque {
  background-color: rgba(255, 255, 255, 0.20);
}

.bg-blur {
  backdrop-filter: blur(3px);
  opacity: 0.7;
}

//random colors

.text-dark-green{
  color: hsl(117, 39%, 37%);
}

.highlight {
  background-color: $yellow;
}

.text-black{
  color:$text-black !important;
}

.icon-invert{
  filter: invert(1);
}



// find filter for color here https://codepen.io/sosuke/pen/Pjoqqp
.icon-gold{
  width: 9px;
  filter: invert(85%) sepia(36%) saturate(2389%) hue-rotate(345deg) brightness(96%) contrast(97%);
}

.icon-silver{
  width: 9px;
  filter: invert(50%) sepia(8%) saturate(15%) hue-rotate(314deg) brightness(103%) contrast(84%);
}

