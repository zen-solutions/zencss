/*
  * zenCSS v1.0.0 (https://zencss.com/)
  * Copyright 2023-2023 Shaun Mackey
  * Licensed under MIT (https://github.com/shaunmackey/zencss/blob/main/LICENSE)
  */
  
// Define the transition mixin
@mixin transition($properties: all, $duration: 0.3s, $ease: ease) {
  transition: $properties $duration $ease;
}

@mixin theme($bg-color, $text-color, $button-bg-color, $button-text-color, $tout-bg-color, $tout-text-color) {
  background: $bg-color;
  color: $text-color;
  overflow: hidden;
  border-radius: $border-radius;

  // Regular buttons inside the theme
  button {
    background: $button-bg-color;
    color: $button-text-color;
    @include transition(background-color 0.3s, color 0.3s, border-color 0.3s);

    &:hover {
      background: darken($button-bg-color, 20%);
      color: $button-text-color;
      //border-color: darken($button-bg-color, 20%);
    }
  }

  //touts for themes
  .tout {
    background: $tout-bg-color;
    color: $tout-text-color;
  }
  
  // .btn-fill specific styles
  .btn-fill {
    background: transparent;
    border: 2px solid $button-bg-color;
    color: $button-bg-color;
    @include transition(background-color 0.3s, color 0.3s, border-color 0.3s);

    &:hover {
      background: $button-bg-color;
      color: $button-text-color;
    }
  }

  //override the text for the ones that aren't right
.theme-primary btn.btn-fill {
    color: red !important;
  }

}

// Your themes map
//---------- $bg-color, $text-color, $button-bg-color, $button-text-color, $tout-bg-color, $tout-text-color
$themes: (
  primary: ($primary-color, $light-color, $cta-color, $light-color, $cta-color, $light-color),
  dark: (#5d5d5d, #f4f4f4, $light-color, $dark-color, $dark-grey, $light-color),
  light: (rgba(255, 255, 255, 0.25), $dark-color, $dark-color, $light-color, $light-grey, $dark-color),
  cta: ($cta-color, #f4f4f4, $primary-color, $light-color, $primary-color, $light-color),
  accent: ($accent-color, $dark-color, $secondary-color, $light-color, $secondary-color, $light-color),
  secondary: ($secondary-color, $light-color, $accent-color, $dark-color, $accent-color, $dark-color)
);

// Iterate over each theme to apply styles
@each $theme, $colors in $themes {
  .theme-#{$theme} {
    @include theme(nth($colors, 1), nth($colors, 2), nth($colors, 3), nth($colors, 4), nth($colors, 5), nth($colors, 6));

    // Override styles for hyperlinks
    a {
      @if $theme == 'secondary' {
          color: $accent-color;
        }@else if $theme == 'cta' {
        color: nth($colors, 4); 
      }@else if $theme == 'accent' {
        color: $secondary-color;
      }
    }
  }
}

// Additional theme-specific adjustments
.theme-light {
  color: unset;
}

//--------- OVERRIDES FOR TEXT NEEDING TO BE SWITCHED/WCAG COMPLIANCE
.theme-primary a,.theme-secondary a, .theme-dark a, .theme-primary .btn-fill , .theme-cta .btn-fill,.theme-secondary .btn-fill {
  color: white;
}

.theme-accent a,.theme-accent .btn-fill{
  color:$dark-color;
}



.theme-dark.accent-left {
  border-left: 10px solid $primary-color;

}

.theme-secondary.accent-left {
  border-left: 10px solid $cta-color;
}

.theme-cta.accent-left {
  border-left: 10px solid $secondary-color;
}

.theme-light.accent-left {
  border-left: 10px solid $accent-color;
}

// Define mixin for transitions
@mixin transition($properties: all, $duration: 0.3s, $ease: ease) {
  transition: $properties $duration $ease;
}

// Basic button style placeholder
%button-basic {
  padding: 12px 20px;
  border: none;
  border-radius: $border-radius; 
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 14px;
}

// Apply .btn-fill styles
// Note: We don't need to repeat the .btn-fill styles
 //here if they are already defined within the mixin above
// If there are any generic styles for .btn-fill not dependent on themes, they can be added here
