{"version":3,"file":"zencss.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,mBAAmB;;AAE5E;AACA;AACA;AACA,SAAS;;AAET;AACA,6DAA6D,mBAAmB;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iEAAiE,mBAAmB;AACpF;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,iEAAiE,mBAAmB;AACpF;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;AClGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,wFAAwF;AACxF,4BAA4B,iBAAiB;AAC7C;AACA,sEAAsE,aAAa,eAAe,EAAE,IAAI,EAAE;AAC1G;AACA,yFAAyF;AACzF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D,kDAAkD,cAAc;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,qEAAqE;AACrE,+BAA+B,iBAAiB;AAChD;AACA,yEAAyE,aAAa,eAAe,EAAE,IAAI,EAAE;AAC7G;AACA;AACA,qEAAqE;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,aAAa;AACjE,qDAAqD,cAAc;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,IAAI;;;;;;;;;ACvXJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA,gEAAgE;AAChE,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;;;ACpDD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;;AAEV;AACA;AACA,UAAU;AACV;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,cAAc;AAC3D,2CAA2C,kBAAkB,MAAM,kBAAkB,MAAM,sBAAsB;AACjH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,oBAAoB;AAC5E,sDAAsD,kBAAkB,MAAM,kBAAkB,MAAM,sBAAsB;AAC5H;AACA;;AAEA;AACA,QAAQ;AACR,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,2CAA2C;AAC3C,oCAAoC;AACpC,qCAAqC;AACrC,4DAA4D;;AAE5D;AACA;;AAEA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,cAAc;;AAEhE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACnXA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;ACjCD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;;AAEZ;AACA;AACA,YAAY;AACZ;AACA,IAAI;;;;;;;;;AC3EJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;ACpBD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iEAAiE;AACjE,YAAY;AACZ;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;AC/CD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;AClED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA,mCAAmC,sBAAsB;;AAEzD;AACA;AACA,kDAAkD,wBAAwB;AAC1E,+CAA+C,0BAA0B,KAAK;AAC9E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;;;;;;;;;AC5HD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C;AAC7C,aAAa;AACb,4CAA4C,WAAW,4BAA4B;;AAEnF;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,CAAC;;;;;;;;;ACtDD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA,2CAA2C,gCAAgC;AAC3E;AACA;;AAEA;AACA,8CAA8C;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE,MAAM;AACvE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,CAAC;;;;;;;;;AC/DD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;AC7BD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;;;;;;;;ACtED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC;;;;;;;;;AClCD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA,CAAC;;;;;;;;;AC3BD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL","sources":["webpack:///./modules/custom-elements.js","webpack:///./modules/carousel.js","webpack:///./modules/dropdown.js","webpack:///./modules/image-gallery.js","webpack:///./modules/accordian.js","webpack:///./modules/misc.js","webpack:///./modules/dark-mode.js","webpack:///./modules/lazy-load.js","webpack:///./modules/background-image.js","webpack:///./modules/mobile-nav.js","webpack:///./modules/modal.js","webpack:///./modules/star-component.js","webpack:///./modules/exit-intent.js","webpack:///./modules/sidebar.js","webpack:///./modules/wizard.js","webpack:///./modules/multistep-wizard.js","webpack:///./modules/tabs.js","webpack:///./modules/poll.js","webpack:///./modules/link-scroll.js","webpack:///./modules/cookie-consent.js","webpack:///./modules/test-mode.js"],"sourcesContent":["/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n// ----------------------------------------\n// Define zenCSS elements for use in JS\n// ----------------------------------------\n\n// Define z-container custom element\nclass ZContainer extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n\ncustomElements.define(\"z-container\", ZContainer);\n\n// Define z-row custom element\nclass ZRow extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n\ncustomElements.define(\"z-row\", ZRow);\n\n// Define z-col custom element\nclass ZCol extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n\ncustomElements.define(\"z-col\", ZCol);\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const sliders = document.querySelectorAll(\".slider\");\n\n    sliders.forEach((slider) => {\n        const slidesContainer = slider.querySelector(\".slides-container\");\n        const originalSlides = Array.from(slidesContainer.children);\n        const totalOriginalSlides = originalSlides.length;\n        const nextButton = slider.querySelector(\".next\");\n        const prevButton = slider.querySelector(\".prev\");\n        const shouldAutoRotate = slider.getAttribute(\"data-auto-rotate\") === \"true\";\n\n        // Clone the first and last slides to create an infinite loop effect\n        const firstSlideClone = originalSlides[0].cloneNode(true);\n        const lastSlideClone = originalSlides[totalOriginalSlides - 1].cloneNode(true);\n        slidesContainer.insertBefore(lastSlideClone, originalSlides[0]);\n        slidesContainer.appendChild(firstSlideClone);\n\n        let currentIndex = 1; // Start from the first original slide (not the clone)\n        let isTransitioning = false;\n        let autoRotate;\n\n        // Function to start auto-rotating\n        function startAutoRotate() {\n            if (shouldAutoRotate) {\n                autoRotate = setInterval(moveToNext, 4000);\n            }\n        }\n\n        // Function to stop auto-rotating\n        function stopAutoRotate() {\n            clearInterval(autoRotate);\n        }\n\n        // Initialize position to the first original slide\n        slidesContainer.style.transition = \"none\";\n        slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n\n        // Re-enable transitions after initial positioning\n        setTimeout(() => {\n            slidesContainer.style.transition = \"transform 0.5s ease\";\n        }, 0);\n\n        function updateSlidePosition() {\n            slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n        }\n\n        function moveToNext() {\n            if (isTransitioning) return;\n            currentIndex++;\n            isTransitioning = true;\n            updateSlidePosition();\n        }\n\n        function moveToPrev() {\n            if (isTransitioning) return;\n            currentIndex--;\n            isTransitioning = true;\n            updateSlidePosition();\n        }\n\n        slidesContainer.addEventListener(\"transitionend\", () => {\n            if (currentIndex >= totalOriginalSlides + 1) {\n                slidesContainer.style.transition = \"none\";\n                currentIndex = 1;\n                slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n                setTimeout(() => {\n                    slidesContainer.style.transition = \"transform 0.5s ease\";\n                }, 0);\n            } else if (currentIndex === 0) {\n                slidesContainer.style.transition = \"none\";\n                currentIndex = totalOriginalSlides;\n                slidesContainer.style.transform = `translateX(-${currentIndex * 100}%)`;\n                setTimeout(() => {\n                    slidesContainer.style.transition = \"transform 0.5s ease\";\n                }, 0);\n            }\n            isTransitioning = false;\n        });\n\n        nextButton.addEventListener(\"click\", moveToNext);\n        prevButton.addEventListener(\"click\", moveToPrev);\n\n        // Event listeners to stop/start auto-rotating\n        slidesContainer.addEventListener(\"mouseenter\", stopAutoRotate);\n        slidesContainer.addEventListener(\"mouseleave\", startAutoRotate);\n        nextButton.addEventListener(\"mouseenter\", stopAutoRotate);\n        nextButton.addEventListener(\"mouseleave\", startAutoRotate);\n        prevButton.addEventListener(\"mouseenter\", stopAutoRotate);\n        prevButton.addEventListener(\"mouseleave\", startAutoRotate);\n\n        // Start auto-rotating for this slider\n        startAutoRotate();\n    });\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//-------------------------------------\n// Dropdown\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var dropdownLinks = document.querySelectorAll(\".dropdown .dropdown-link\");\n\n    dropdownLinks.forEach(function (link) {\n        link.addEventListener(\"click\", function (event) {\n            event.preventDefault();\n\n            // Toggle the dropdown content visibility\n            var dropdownContent = link.nextElementSibling;\n            if (dropdownContent.style.display === \"block\") {\n                dropdownContent.style.display = \"none\";\n            } else {\n                // Close all open dropdowns before opening the new one\n                closeAllDropdowns();\n                dropdownContent.style.display = \"block\";\n            }\n        });\n    });\n});\n\nfunction closeAllDropdowns() {\n    var dropdowns = document.querySelectorAll(\".dropdown .dropdown-content\");\n    dropdowns.forEach(function (dropdown) {\n        dropdown.style.display = \"none\";\n    });\n}\n\n// Close all dropdowns when clicking outside\nwindow.onclick = function (event) {\n    if (!event.target.matches(\".dropdown-link\")) {\n        closeAllDropdowns();\n    }\n};\n","// /*\n//  * zenCSS v2.1.0-beta (https://zencss.com/)\n//  * Copyright 2022-2024 Shaun Mackey\n//  * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n//  */\n\n//12/29 removing lazy load\n\n/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\nfunction preloadImage(src) {\n    const img = new Image();\n    img.src = src;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const gallery = document.querySelector(\".image-gallery\");\n    const modal = document.querySelector(\"z-modal\");\n    const paginationNav = document.querySelector(\".pagination-nav\");\n\n    if (gallery && modal && paginationNav) {\n        let currentPage = 1;\n        const imagesPerPage = 15;\n        let currentModalIndex = 0;\n        const imageWrappers = [];\n\n        Array.from(gallery.children).forEach((img, index) => {\n            const wrapper = document.createElement(\"div\");\n            wrapper.style.display = index < imagesPerPage ? \"block\" : \"none\";\n            const clonedImg = img.cloneNode(true);\n            clonedImg.addEventListener(\"click\", () => {\n                currentModalIndex = index;\n                openModal(clonedImg.src, clonedImg.getAttribute(\"data-text\"), index);\n            });\n            wrapper.appendChild(clonedImg);\n            imageWrappers.push(wrapper);\n        });\n\n        const totalPages = Math.ceil(imageWrappers.length / imagesPerPage);\n\n        function updateImagesForPage(pageNumber) {\n            imageWrappers.forEach((wrapper, index) => {\n                const start = (pageNumber - 1) * imagesPerPage;\n                const end = start + imagesPerPage;\n                wrapper.style.display = index >= start && index < end ? \"block\" : \"none\";\n            });\n        }\n\n        function updatePaginationNav() {\n            paginationNav.innerHTML = '<a href=\"#\" class=\"item\" data-page=\"prev\">&laquo;</a>';\n            for (let i = 1; i <= totalPages; i++) {\n                const classCurrent = i === currentPage ? \"current\" : \"\";\n                paginationNav.innerHTML += `<a href=\"#\" class=\"item ${classCurrent}\" data-page=\"${i}\">${i}</a>`;\n            }\n            paginationNav.innerHTML += '<a href=\"#\" class=\"item\" data-page=\"next\">&raquo;</a>';\n        }\n\n        function openModal(src, text, index) {\n            currentModalIndex = index;\n            const modalBody = modal.shadowRoot.querySelector(\".modal-body\");\n            const modalWrapper = modal.shadowRoot.querySelector(\".modal-wrapper\");\n            const modalHeader = modal.shadowRoot.querySelector(\".modal-header\");\n\n            if (modalBody && modalWrapper && modalHeader) {\n                const currentWidth = modalWrapper.clientWidth;\n                const currentHeight = modalWrapper.clientHeight;\n                modalWrapper.style.minWidth = `${currentWidth}px`;\n                modalWrapper.style.minHeight = `${currentHeight}px`;\n\n                modalBody.innerHTML = \"\";\n                const imageContainer = document.createElement(\"div\");\n                imageContainer.style.display = \"flex\";\n                imageContainer.style.position = \"relative\";\n                imageContainer.style.justifyContent = \"center\";\n\n                const prevArrow = document.createElement(\"div\");\n                prevArrow.className = \"prev arrow theme-dark\";\n                prevArrow.innerHTML = \"❮\";\n                prevArrow.style.cursor = \"pointer\";\n                prevArrow.style.position = \"absolute\";\n                prevArrow.style.top = \"50%\";\n                prevArrow.style.left = \"7px\";\n                prevArrow.style.padding = \"10px\";\n                prevArrow.style.backgroundColor = \"rgba(255,255,255,.5)\";\n                prevArrow.style.transform = \"translateY(-50%)\";\n                prevArrow.onclick = function () {\n                    currentModalIndex = currentModalIndex > 0 ? currentModalIndex - 1 : imageWrappers.length - 1;\n                    const newImg = imageWrappers[currentModalIndex].firstChild;\n                    openModal(newImg.src, newImg.getAttribute(\"data-text\"), currentModalIndex);\n                };\n                imageContainer.appendChild(prevArrow);\n\n                const modalImage = document.createElement(\"img\");\n                modalImage.onload = () => {\n                    modalWrapper.style.minWidth = \"\";\n                    modalWrapper.style.minHeight = \"\";\n                };\n                modalImage.src = src;\n                modalImage.style.maxWidth = \"100%\";\n                modalImage.style.maxHeight = \"60vh\";\n                modalImage.style.objectFit = \"contain\";\n                modalImage.style.margin = \"auto\";\n                imageContainer.appendChild(modalImage);\n\n                const nextArrow = document.createElement(\"div\");\n                nextArrow.className = \"next arrow theme-dark\";\n                nextArrow.innerHTML = \"❯\";\n                nextArrow.style.cursor = \"pointer\";\n                nextArrow.style.position = \"absolute\";\n                nextArrow.style.padding = \"10px\";\n                nextArrow.style.top = \"50%\";\n                nextArrow.style.backgroundColor = \"rgba(255,255,255,.5)\";\n                nextArrow.style.right = \"7px\";\n                nextArrow.style.transform = \"translateY(-50%)\";\n                nextArrow.onclick = function () {\n                    currentModalIndex = currentModalIndex < imageWrappers.length - 1 ? currentModalIndex + 1 : 0;\n                    const newImg = imageWrappers[currentModalIndex].firstChild;\n                    openModal(newImg.src, newImg.getAttribute(\"data-text\"), currentModalIndex);\n                };\n                imageContainer.appendChild(nextArrow);\n\n                modalBody.appendChild(imageContainer);\n\n                const modalText = document.createElement(\"p\");\n                modalText.textContent = text;\n                modalText.style.textAlign = \"center\";\n                modalBody.appendChild(modalText);\n\n                modalBody.style.overflowY = \"auto\";\n                modalBody.style.maxHeight = \"80vh\";\n                modalHeader.style.display = \"none\";\n\n                modalWrapper.style.maxWidth = window.innerWidth >= 1070 ? \"860px\" : \"80%\";\n\n                const nextIndex = (index + 1) % imageWrappers.length;\n                const prevIndex = (index - 1 + imageWrappers.length) % imageWrappers.length;\n                preloadImage(imageWrappers[nextIndex].firstChild.src);\n                preloadImage(imageWrappers[prevIndex].firstChild.src);\n\n                modal.open();\n            }\n        }\n\n        paginationNav.addEventListener(\"click\", function (event) {\n            event.preventDefault();\n            const target = event.target;\n            if (target.tagName === \"A\" && target.dataset.page) {\n                let newPage = currentPage;\n                if (target.dataset.page === \"prev\") {\n                    newPage = currentPage > 1 ? currentPage - 1 : totalPages;\n                } else if (target.dataset.page === \"next\") {\n                    newPage = currentPage < totalPages ? currentPage + 1 : 1;\n                } else {\n                    newPage = parseInt(target.dataset.page);\n                }\n\n                if (newPage !== currentPage) {\n                    currentPage = newPage;\n                    updateImagesForPage(currentPage);\n                    updatePaginationNav();\n                }\n            }\n        });\n\n        window.addEventListener(\"resize\", function () {\n            const modalWrapper = modal.shadowRoot.querySelector(\".modal-wrapper\");\n            if (modalWrapper) {\n                modalWrapper.style.maxWidth = window.innerWidth >= 1070 ? \"860px\" : \"80%\";\n            }\n        });\n\n        gallery.innerHTML = \"\";\n        imageWrappers.forEach((wrapper) => gallery.appendChild(wrapper));\n        updateImagesForPage(currentPage);\n        updatePaginationNav();\n    }\n});\n\n// function preloadImage(src) {\n//     const img = new Image();\n//     img.src = src;\n// }\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const gallery = document.querySelector(\".image-gallery\");\n//     const modal = document.querySelector(\"z-modal\");\n//     const paginationNav = document.querySelector(\".pagination-nav\");\n\n//     if (gallery && modal && paginationNav) {\n//         let currentPage = 1;\n//         const imagesPerPage = 15;\n//         let currentModalIndex = 0;\n//         const imageWrappers = [];\n\n//         Array.from(gallery.children).forEach((img, index) => {\n//             const wrapper = document.createElement(\"div\");\n//             wrapper.classList.add(\"lazy-load\"); // using the lazy-load class\n//             wrapper.style.display = index < imagesPerPage ? \"block\" : \"none\";\n//             const clonedImg = img.cloneNode(true);\n//             clonedImg.addEventListener(\"click\", () => {\n//                 currentModalIndex = index;\n//                 openModal(\n//                     clonedImg.src,\n//                     clonedImg.getAttribute(\"data-text\"),\n//                     index,\n//                 );\n//             });\n//             wrapper.appendChild(clonedImg);\n//             imageWrappers.push(wrapper);\n//         });\n\n//         const totalPages = Math.ceil(imageWrappers.length / imagesPerPage);\n\n//         function updateImagesForPage(pageNumber) {\n//             imageWrappers.forEach((wrapper, index) => {\n//                 const start = (pageNumber - 1) * imagesPerPage;\n//                 const end = start + imagesPerPage;\n//                 wrapper.style.display =\n//                     index >= start && index < end ? \"block\" : \"none\";\n//             });\n//         }\n\n//         function updatePaginationNav() {\n//             paginationNav.innerHTML =\n//                 '<a href=\"#\" class=\"item\" data-page=\"prev\">&laquo;</a>';\n//             for (let i = 1; i <= totalPages; i++) {\n//                 const classCurrent = i === currentPage ? \"current\" : \"\";\n//                 paginationNav.innerHTML += `<a href=\"#\" class=\"item ${classCurrent}\" data-page=\"${i}\">${i}</a>`;\n//             }\n//             paginationNav.innerHTML +=\n//                 '<a href=\"#\" class=\"item\" data-page=\"next\">&raquo;</a>';\n//         }\n\n//         function openModal(src, text, index) {\n//             currentModalIndex = index;\n//             const modalBody = modal.shadowRoot.querySelector(\".modal-body\");\n//             const modalWrapper =\n//                 modal.shadowRoot.querySelector(\".modal-wrapper\");\n//             const modalHeader = modal.shadowRoot.querySelector(\".modal-header\");\n\n//             if (modalBody && modalWrapper && modalHeader) {\n//                 const currentWidth = modalWrapper.clientWidth;\n//                 const currentHeight = modalWrapper.clientHeight;\n//                 modalWrapper.style.minWidth = `${currentWidth}px`;\n//                 modalWrapper.style.minHeight = `${currentHeight}px`;\n\n//                 modalBody.innerHTML = \"\";\n//                 const imageContainer = document.createElement(\"div\");\n//                 imageContainer.style.display = \"flex\";\n//                 imageContainer.style.position = \"relative\";\n//                 imageContainer.style.justifyContent = \"center\";\n\n//                 const prevArrow = document.createElement(\"div\");\n//                 prevArrow.className = \"prev arrow theme-dark\";\n//                 prevArrow.innerHTML = \"❮\";\n//                 prevArrow.style.cursor = \"pointer\";\n//                 prevArrow.style.position = \"absolute\";\n//                 prevArrow.style.top = \"50%\";\n//                 prevArrow.style.left = \"7px\";\n//                 prevArrow.style.padding = \"10px\";\n//                 prevArrow.style.backgroundColor = \"rgba(255,255,255,.5)\";\n//                 prevArrow.style.transform = \"translateY(-50%)\";\n//                 prevArrow.onclick = function () {\n//                     currentModalIndex =\n//                         currentModalIndex > 0\n//                             ? currentModalIndex - 1\n//                             : imageWrappers.length - 1;\n//                     const newImg = imageWrappers[currentModalIndex].firstChild;\n//                     openModal(\n//                         newImg.src,\n//                         newImg.getAttribute(\"data-text\"),\n//                         currentModalIndex,\n//                     );\n//                 };\n//                 imageContainer.appendChild(prevArrow);\n\n//                 const modalImage = document.createElement(\"img\");\n//                 modalImage.onload = () => {\n//                     modalWrapper.style.minWidth = \"\";\n//                     modalWrapper.style.minHeight = \"\";\n//                 };\n//                 modalImage.src = src;\n//                 modalImage.style.maxWidth = \"100%\";\n//                 modalImage.style.maxHeight = \"60vh\";\n//                 modalImage.style.objectFit = \"contain\";\n//                 modalImage.style.margin = \"auto\";\n//                 imageContainer.appendChild(modalImage);\n\n//                 const nextArrow = document.createElement(\"div\");\n//                 nextArrow.className = \"next arrow theme-dark\";\n//                 nextArrow.innerHTML = \"❯\";\n//                 nextArrow.style.cursor = \"pointer\";\n//                 nextArrow.style.position = \"absolute\";\n//                 nextArrow.style.padding = \"10px\";\n//                 nextArrow.style.top = \"50%\";\n//                 nextArrow.style.backgroundColor = \"rgba(255,255,255,.5)\";\n//                 nextArrow.style.right = \"7px\";\n//                 nextArrow.style.transform = \"translateY(-50%)\";\n//                 nextArrow.onclick = function () {\n//                     currentModalIndex =\n//                         currentModalIndex < imageWrappers.length - 1\n//                             ? currentModalIndex + 1\n//                             : 0;\n//                     const newImg = imageWrappers[currentModalIndex].firstChild;\n//                     openModal(\n//                         newImg.src,\n//                         newImg.getAttribute(\"data-text\"),\n//                         currentModalIndex,\n//                     );\n//                 };\n//                 imageContainer.appendChild(nextArrow);\n\n//                 modalBody.appendChild(imageContainer);\n\n//                 const modalText = document.createElement(\"p\");\n//                 modalText.textContent = text;\n//                 modalText.style.textAlign = \"center\";\n//                 modalBody.appendChild(modalText);\n\n//                 modalBody.style.overflowY = \"auto\";\n//                 modalBody.style.maxHeight = \"80vh\";\n//                 modalHeader.style.display = \"none\";\n\n//                 modalWrapper.style.maxWidth =\n//                     window.innerWidth >= 1070 ? \"860px\" : \"80%\";\n\n//                 const nextIndex = (index + 1) % imageWrappers.length;\n//                 const prevIndex =\n//                     (index - 1 + imageWrappers.length) % imageWrappers.length;\n//                 preloadImage(imageWrappers[nextIndex].firstChild.src);\n//                 preloadImage(imageWrappers[prevIndex].firstChild.src);\n\n//                 modal.open();\n//             }\n//         }\n\n//         paginationNav.addEventListener(\"click\", function (event) {\n//             event.preventDefault();\n//             const target = event.target;\n//             if (target.tagName === \"A\" && target.dataset.page) {\n//                 let newPage = currentPage;\n//                 if (target.dataset.page === \"prev\") {\n//                     newPage = currentPage > 1 ? currentPage - 1 : totalPages;\n//                 } else if (target.dataset.page === \"next\") {\n//                     newPage = currentPage < totalPages ? currentPage + 1 : 1;\n//                 } else {\n//                     newPage = parseInt(target.dataset.page);\n//                 }\n\n//                 if (newPage !== currentPage) {\n//                     currentPage = newPage;\n//                     updateImagesForPage(currentPage);\n//                     updatePaginationNav();\n//                 }\n//             }\n//         });\n\n//         window.addEventListener(\"resize\", function () {\n//             const modalWrapper =\n//                 modal.shadowRoot.querySelector(\".modal-wrapper\");\n//             if (modalWrapper) {\n//                 modalWrapper.style.maxWidth =\n//                     window.innerWidth >= 1070 ? \"860px\" : \"80%\";\n//             }\n//         });\n\n//         gallery.innerHTML = \"\";\n//         imageWrappers.forEach((wrapper) => gallery.appendChild(wrapper));\n//         updateImagesForPage(currentPage);\n//         updatePaginationNav();\n//     }\n// });\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var accordionToggles = document.querySelectorAll(\".accordion-toggle\");\n\n    accordionToggles.forEach(function (accordionToggle) {\n        accordionToggle.addEventListener(\"click\", function () {\n            // Determine if the clicked toggle is being expanded\n            var isExpanding = this.getAttribute(\"aria-expanded\") === \"false\";\n\n            // Remove active class from all toggles and reset icons\n            accordionToggles.forEach(function (otherToggle) {\n                otherToggle.classList.remove(\"active-toggle\");\n                otherToggle.setAttribute(\"aria-expanded\", \"false\");\n\n                var otherIcon = otherToggle.querySelector(\".zenicon-keyboard-arrow-right, .zenicon-keyboard-arrow-down\");\n                if (otherIcon) {\n                    otherIcon.classList.remove(\"zenicon-keyboard-arrow-down\");\n                    otherIcon.classList.add(\"zenicon-keyboard-arrow-right\");\n                }\n\n                var otherPanel = otherToggle.nextElementSibling;\n                otherPanel.style.overflow = \"hidden\"; // Set overflow to hidden during transition\n                otherPanel.style.maxHeight = null;\n                otherPanel.setAttribute(\"aria-hidden\", \"true\"); // Hide other panels\n            });\n\n            // Set the clicked toggle as active if it's expanding\n            if (isExpanding) {\n                this.classList.add(\"active-toggle\");\n                this.setAttribute(\"aria-expanded\", \"true\");\n\n                var icon = this.querySelector(\".zenicon-keyboard-arrow-right, .zenicon-keyboard-arrow-down\");\n                if (icon) {\n                    icon.classList.remove(\"zenicon-keyboard-arrow-right\");\n                    icon.classList.add(\"zenicon-keyboard-arrow-down\");\n                }\n\n                var panel = this.nextElementSibling;\n                panel.style.maxHeight = panel.scrollHeight > 200 ? \"1000px\" : panel.scrollHeight + 10 + \"px\";\n                panel.setAttribute(\"aria-hidden\", \"false\"); // Show the current panel\n\n                // Wait for the transition to end before setting overflow to auto\n                setTimeout(function() {\n                    panel.style.overflow = \"auto\";\n                }, 300); // Replace 300 with the duration of your transition\n            }\n        });\n    });\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//-------------------------------------\n// Dynamic year in footer\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    const yearSpan = document.getElementById(\"current-year\");\n    if (yearSpan) {\n        const currentYear = new Date().getFullYear();\n        yearSpan.textContent = currentYear;\n    }\n});\n\n//-------------------------------------\n// icon toggle\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var iconToggles = document.querySelectorAll(\".icon-toggle\");\n\n    iconToggles.forEach(function (toggle) {\n        toggle.addEventListener(\"click\", function () {\n            var iconOff = this.querySelector(\".icon-off\");\n            var iconOn = this.querySelector(\".icon-on\");\n\n            // Toggle the 'show' class\n            iconOff.classList.toggle(\"show\");\n            iconOn.classList.toggle(\"show\");\n        });\n    });\n});\n\n// New stuff here after modules were created. If we need to revert, include this stuff.\ndocument.querySelectorAll(\".accordion-toggle\").forEach((item) => {\n    item.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        const contentId = item.getAttribute(\"aria-controls\");\n        const content = document.getElementById(contentId);\n\n        // Close other expanded contents\n        document.querySelectorAll(\".expanded-content\").forEach((el) => {\n            if (el.id !== contentId) {\n                el.classList.remove(\"show\");\n                el.style.overflowY = \"hidden\";\n            }\n        });\n\n        // Toggle current content\n        content.classList.toggle(\"show\");\n\n        setTimeout(() => {\n            if (content.scrollHeight > content.clientHeight) {\n                content.style.overflowY = \"auto\";\n            } else {\n                content.style.overflowY = \"hidden\";\n            }\n        }, 500);\n    });\n});\n\n//-------------------------------------\n// Corner Popup\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var cornerPopup = document.querySelector(\".corner-popup\");\n\n    if (cornerPopup) {\n        var button = cornerPopup.querySelector(\"button\");\n        var popup = cornerPopup.querySelector(\"div\");\n\n        popup.classList.add(\"card\");\n\n        button.addEventListener(\"click\", function () {\n            popup.classList.toggle(\"hidden\");\n            console.log(\"Button clicked\");\n        });\n    }\n});\n\n//-------------------------------------\n// Responsive Table\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Function to apply data labels to a table\n    function applyDataLabelsToTable(table) {\n        // Get all the headers from the direct child thead of the table\n        const headers = Array.from(table.querySelectorAll(\":scope > thead > tr > th\")).map((th) => th.textContent.trim());\n\n        // Iterate over each row in the direct child tbody of the table\n        table.querySelectorAll(\":scope > tbody > tr\").forEach((row) => {\n            // Get all cells (td) in this row\n            row.querySelectorAll(\":scope > td\").forEach((cell, index) => {\n                // Assign the corresponding header text to the data-label attribute of the cell\n                if (headers[index]) {\n                    cell.setAttribute(\"data-label\", headers[index]);\n                }\n            });\n        });\n    }\n\n    // Select all tables with class 'responsive-table' and apply data labels to each\n    document.querySelectorAll(\".responsive-table\").forEach(applyDataLabelsToTable);\n});\n\n//-------------------------------------\n// Lazy Load Test - WIP\n//-------------------------------------\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\n//     const lazyLoadImages = document.querySelectorAll(\"img.lazy-load\");\n\n//     if (lazyLoadImages.length > 0) {\n//       const imageObserver = new IntersectionObserver(function(entries, observer) {\n//         entries.forEach(function(entry) {\n//           if (entry.isIntersecting) {\n//             const image = entry.target;\n//             image.src = image.dataset.src;\n//             image.classList.remove(\"lazy-load\");\n//             imageObserver.unobserve(image);\n//           }\n//         });\n//       });\n\n//       lazyLoadImages.forEach(function(image) {\n//         imageObserver.observe(image);\n//       });\n//     }\n//   });\n\n//-------------------------------------\n// Tabbed Card\n//-------------------------------------\n\n// function showTab(tabNumber) {\n//     const tabbedCard = document.querySelector(\".tabbed-card\");\n//     if (tabbedCard) {\n//         const tabs = tabbedCard.querySelectorAll(\".tab\");\n//         const tabContents = tabbedCard.querySelectorAll(\".tab-content\");\n\n//         if (tabs.length && tabContents.length) {\n//             tabs.forEach((tab, index) => {\n//                 if (index + 1 === tabNumber) {\n//                     tab.classList.add(\"active\");\n//                     if (tabContents[index]) {\n//                         tabContents[index].classList.add(\"active\");\n//                     }\n//                 } else {\n//                     tab.classList.remove(\"active\");\n//                     if (tabContents[index]) {\n//                         tabContents[index].classList.remove(\"active\");\n//                     }\n//                 }\n//             });\n//         }\n//     }\n// }\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const tabs = document.querySelectorAll(\".tab\");\n//     if (tabs.length) {\n//         tabs.forEach((tab) => {\n//             tab.addEventListener(\"click\", function () {\n//                 const tabNumber = parseInt(tab.getAttribute(\"data-tab\"));\n//                 showTab(tabNumber);\n//             });\n//         });\n//     }\n// });\n\n//-------------------------------------\n// side menus\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    // Select all the menu items\n    const menuItems = document.querySelectorAll(\".nav-menu li\");\n\n    // Only proceed if menu items exist\n    if (menuItems.length) {\n        menuItems.forEach((item) => {\n            // Add click event listener to each menu item\n            item.addEventListener(\"click\", function () {\n                // Remove the 'active' class from all items\n                menuItems.forEach((i) => i.classList.remove(\"active\"));\n\n                // Add the 'active' class to the clicked item\n                this.classList.add(\"active\");\n            });\n        });\n    }\n});\n\n//-------------------------------------\n// unread notifications\n//-------------------------------------\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var button = document.querySelector(\".btn-circle\");\n\n    // Check if the button exists\n    if (button) {\n        // Restore the data-unread attribute if 24 hours have not passed\n        var unreadResetTime = localStorage.getItem(\"unreadResetTime\");\n        if (unreadResetTime && new Date().getTime() < unreadResetTime) {\n            button.removeAttribute(\"data-unread\");\n        }\n\n        // Add click event listener to the button\n        button.addEventListener(\"click\", function () {\n            // Remove data-unread attribute and set the reset time in localStorage\n            button.removeAttribute(\"data-unread\");\n            var resetTime = new Date().getTime() + 24 * 60 * 60 * 1000; // 24 hours from now\n            localStorage.setItem(\"unreadResetTime\", resetTime);\n        });\n    }\n});\n\n//-------------------------------------\n// fade in animation\n//-------------------------------------\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const elementsToAnimate = document.querySelectorAll(\".fade-in\");\n\n    if (elementsToAnimate.length > 0) {\n        const observer = new IntersectionObserver(\n            (entries) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        entry.target.classList.add(\"visible\");\n                    }\n                });\n            },\n            {\n                threshold: 0.3,\n            },\n        );\n\n        elementsToAnimate.forEach((el) => observer.observe(el));\n    }\n});\n\n//   //pie charts\n//   document.addEventListener('DOMContentLoaded', () => {\n//     const chart = document.querySelector('.zen-pie-chart');\n//     let accumulatedRotation = 0;\n\n//     document.querySelectorAll('.zen-pie-chart .zen-slice').forEach(slice => {\n//         const percentage = parseFloat(slice.dataset.percentage);\n//         const rotation = 360 * (percentage / 100);\n//         const sliceRotation = accumulatedRotation + rotation / 2;\n\n//         // Set styles and classes for the slice\n//         slice.style.transform = `rotate(${sliceRotation}deg)`;\n//         slice.style.clip = `rect(0px, ${chart.clientWidth}px, ${chart.clientWidth}px, ${chart.clientWidth / 2}px)`;\n//         slice.style.backgroundColor = getComputedStyle(slice).backgroundColor;\n//         slice.style.opacity = '1';\n\n//         // For more than 50%, create an overlay slice to simulate the additional percentage\n//         if (percentage > 50) {\n//             let overlaySlice = document.createElement('div');\n//             overlaySlice.classList.add('zen-slice', 'overlay');\n//             overlaySlice.style.backgroundColor = slice.style.backgroundColor;\n//             overlaySlice.style.position = 'absolute';\n//             overlaySlice.style.width = '100%';\n//             overlaySlice.style.height = '100%';\n//             overlaySlice.style.transform = `rotate(${sliceRotation + 180}deg)`;\n//             overlaySlice.style.clip = `rect(0px, ${chart.clientWidth}px, ${chart.clientWidth}px, ${chart.clientWidth / 2}px)`;\n//             chart.appendChild(overlaySlice);\n//         }\n\n//         accumulatedRotation += rotation;\n//     });\n// });\n\n//-------------------------------------\n// Pattern Interrupt\n//-------------------------------------\n//   document.addEventListener('DOMContentLoaded', function() {\n//     var modalShown = false;\n//     var modal = document.querySelector('.pattern-interrupt');\n//     var modal2 = document.querySelector('.modal');\n\n//     function showModal() {\n//         if (!modal) return; // Exit if no modal found\n\n//         // Center the modal in the viewport\n//         modal.style.display = 'block';\n//         modal2.style.display = 'block';\n//         modal.style.position = 'fixed'; // Fixed position\n//         modal.style.top = '50%'; // Center vertically\n//         modal.style.left = '50%'; // Center horizontally\n//         modal.style.transform = 'translate(-50%, -50%)'; // Adjust for modal's dimensions\n\n//         modalShown = true;\n//     }\n\n//     function checkScroll() {\n//         if (modalShown) return; // Skip if the modal is already shown\n\n//         var scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n//         var totalHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n//         var scrolledPercentage = (scrollPosition / totalHeight) * 100;\n\n//         if (scrolledPercentage > 10) {\n//             showModal();\n//         }\n//     }\n\n//     // Attach the scroll event listener only if the modal exists\n//     if (modal) {\n//         window.addEventListener('scroll', checkScroll);\n//     }\n// });\n\n//-------------------------------------\n// Dynamic Navigation\n//-------------------------------------\n//   document.addEventListener('DOMContentLoaded', function() {\n//     const header = document.querySelector('.header-sticky.slide-down');\n//     console.log(\"Script running\");\n//     if (header) {\n//       fetch('../docs/navigation.html')  // Assuming navigation.html is in the /docs folder\n//         .then(response => response.text())\n//         .then(data => {\n//           header.innerHTML = data;\n//         })\n//         .catch(error => console.error('Error loading navigation:', error));\n//     }\n//   });\n\n//   //-------------------------------------\n//   // Video Player\n//   //-------------------------------------\n\n//   class VideoPlayer extends HTMLElement {\n//     constructor() {\n//         super();\n//         const shadowRoot = this.attachShadow({ mode: 'open' });\n\n//         const style = document.createElement('style');\n//         style.textContent = `\n\n//         `;\n\n//         const container = document.createElement('div');\n//         container.className = 'video-container';\n\n//         const video = document.createElement('video');\n//         video.className = 'video-player';\n//         video.controls = true;\n\n//         const src = this.getAttribute('src');\n//         if (src) {\n//             const source = document.createElement('source');\n//             source.src = src;\n//             source.type = 'video/mp4';\n//             video.appendChild(source);\n//         } else {\n//             console.error('Video source not provided for <video-player>.');\n//         }\n\n//         container.appendChild(video);\n//         shadowRoot.appendChild(style);\n//         shadowRoot.appendChild(container);\n//     }\n// }\n\n// customElements.define('video-player', VideoPlayer);\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//--------------------------------------------------------\n//  Toggle Dark Mode Option\n//--------------------------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    function toggleDarkMode() {\n        const zenElements = document.querySelectorAll(\".zen\");\n\n        zenElements.forEach((element) => {\n            element.classList.toggle(\"zen-dark\");\n        });\n\n        const isDarkModeEnabled = Array.from(zenElements).some((element) => element.classList.contains(\"zen-dark\"));\n        localStorage.setItem(\"darkMode\", isDarkModeEnabled);\n    }\n\n    const toggleButton = document.getElementById(\"toggleDarkMode\");\n    if (toggleButton) {\n        toggleButton.addEventListener(\"click\", toggleDarkMode);\n    }\n\n    const storedDarkMode = localStorage.getItem(\"darkMode\");\n    if (storedDarkMode === \"true\") {\n        const zenElements = document.querySelectorAll(\".zen\");\n        zenElements.forEach((element) => {\n            element.classList.add(\"zen-dark\");\n        });\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var lazyImages = [].slice.call(document.querySelectorAll(\".zen img.lazy-load\"));\n\n    if (lazyImages.length === 0) {\n        //console.log('No lazy-load images found.');\n        return;\n    }\n\n    if (\"IntersectionObserver\" in window) {\n        let lazyImageObserver = new IntersectionObserver(function (entries, observer) {\n            entries.forEach(function (entry) {\n                if (entry.isIntersecting) {\n                    let lazyImage = entry.target;\n                    // Set onload before changing the src\n                    lazyImage.onload = function () {\n                        this.classList.remove(\"lazy-load\");\n                        //console.log('Lazy-load class removed:', this);\n                    };\n                    lazyImage.src = lazyImage.dataset.src;\n                    lazyImageObserver.unobserve(lazyImage);\n                }\n            });\n        });\n\n        lazyImages.forEach(function (lazyImage) {\n            lazyImageObserver.observe(lazyImage);\n        });\n    } else {\n        lazyImages.forEach(function (lazyImage) {\n            lazyImage.onload = function () {\n                this.classList.remove(\"lazy-load\");\n                //console.log('Lazy-load class removed:', this);\n            };\n            lazyImage.src = lazyImage.dataset.src;\n        });\n    }\n});\n\n//old depricated - leaving for now to reference to what was done for image gallery\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const images = document.querySelectorAll(\".lazy-load\");\n\n//     if (images.length > 0) {\n//         const imageObserver = new IntersectionObserver((entries, observer) => {\n//             entries.forEach((entry) => {\n//                 if (entry.isIntersecting) {\n//                     const image = entry.target;\n//                     image.setAttribute(\"aria-busy\", \"true\"); // Indicate loading\n//                     const newSrc = image.getAttribute(\"data-src\");\n\n//                     // Create a new Image to load in the background\n//                     const img = new Image();\n//                     img.onload = function () {\n//                         image.src = newSrc; // Set src when fully loaded\n//                         image.removeAttribute(\"aria-busy\"); // Remove loading indication\n//                     };\n//                     img.src = newSrc;\n\n//                     image.classList.remove(\"lazy-load\");\n//                     observer.unobserve(image);\n//                 }\n//             });\n//         });\n\n//         images.forEach((image) => {\n//             imageObserver.observe(image);\n//         });\n//     }\n// });\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//--------------------------------------------------------\n//Background image\n//--------------------------------------------------------\n\nwindow.addEventListener(\"DOMContentLoaded\", function () {\n    var imageContainers = document.querySelectorAll(\".image-container\");\n    imageContainers.forEach(function (container) {\n        var img = container.querySelector(\"img\");\n        var imgUrl = img.src;\n        container.style.backgroundImage = \"url(\" + imgUrl + \")\";\n        container.style.backgroundSize = \"cover\";\n        container.style.backgroundPosition = \"center center\";\n        img.style.display = \"none\";\n    });\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n// //--------------------------------------------------------\n// // Mobile Nav\n// //--------------------------------------------------------\n// document.addEventListener(\"DOMContentLoaded\", (event) => {\n//     const hamburgerButton = document.getElementById(\"hamburger-button\");\n//     const closeButton = document.getElementById(\"close-button\");\n//     const nav = document.querySelector(\"nav\");\n//     const navLinks = document.querySelectorAll(\".nav-link\");\n\n//     const toggleMenu = () => {\n//         nav.style.left = nav.style.left === \"0px\" ? \"-250px\" : \"0px\";\n//     };\n\n//     if (hamburgerButton && closeButton && nav) {\n//         hamburgerButton.addEventListener(\"click\", toggleMenu);\n//         closeButton.addEventListener(\"click\", toggleMenu);\n\n//         navLinks.forEach((link) => {\n//             //    link.addEventListener(\"click\", toggleMenu); // Use toggleMenu to close the menu\n//         });\n//     }\n// });\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    const hamburgerButton = document.getElementById(\"hamburger-button-2\");\n    const closeButton = document.getElementById(\"close-button\");\n    const nav = document.querySelector(\".top-nav\");\n    const navLinks = document.querySelectorAll(\".nav-link\");\n\n    const toggleMenu = () => {\n        nav.style.left = nav.style.left === \"0px\" ? \"-250px\" : \"0px\";\n    };\n\n    if (hamburgerButton && closeButton && nav) {\n        hamburgerButton.addEventListener(\"click\", toggleMenu);\n        closeButton.addEventListener(\"click\", toggleMenu);\n\n        navLinks.forEach((link) => {\n            link.addEventListener(\"click\", toggleMenu);\n        });\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//--------------------------------------------------------\n// Modal\n//--------------------------------------------------------\n\nclass ZModal extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        this.render();\n    }\n\n    connectedCallback() {\n        this.shadowRoot.querySelector(\".close\").addEventListener(\"click\", () => {\n            this.close();\n        });\n        this.shadowRoot.querySelector(\".modal\").addEventListener(\"click\", (event) => {\n            if (event.target === event.currentTarget) {\n                this.close();\n            }\n        });\n        document.addEventListener(\"click\", (event) => {\n            if (event.target.classList.contains(\"modal-close\")) {\n                this.close();\n            }\n\n            document.addEventListener(\"keydown\", (event) => {\n                if (event.key === \"Escape\") {\n                    this.close();\n                }\n            });\n        });\n\n        const openModalButton = document.querySelector(\".modal-open\");\n        if (openModalButton) {\n            openModalButton.addEventListener(\"click\", () => {\n                this.open();\n            });\n        }\n    }\n\n    open() {\n        this.shadowRoot.querySelector(\".modal\").style.display = \"flex\";\n    }\n\n    close() {\n        this.shadowRoot.querySelector(\".modal\").style.display = \"none\";\n    }\n\n    render() {\n        this.shadowRoot.innerHTML = `\n          <style>\n          .modal {\n              position: fixed;\n              z-index: 10000;\n              left: 0;\n              top: 0;\n              width: 100%;\n              height: 100%;\n              background-color: rgba(0, 0, 0, 0.8);\n              display: none;\n              align-items: center;\n              justify-content: center;\n          }\n          .modal-wrapper {\n              position: relative;\n              width: 80%;\n              border: 1px solid rgba(111,111,111,.35);\n              border-radius: var(--border-radius, 4px);\n              background-color: #f4f4f4;\n              color: #424242;\n              box-sizing: border-box;\n              max-width:500px;\n          }\n          \n          .modal-header {\n              display: flex;\n              justify-content: space-between;\n              padding: 0 20px;\n              border-bottom: 1px solid rgba(111,111,111,.35);\n          }\n          .modal-title {\n              margin: 0;\n              font-size: 1.5em;\n          }\n          .close {\n              color: var(--dark-color, #aaa);\n              font-size: 28px;\n              font-weight: bold;\n              cursor: pointer;\n              border: none;\n              background-color: transparent;\n              position:relative:\n\n          }\n          .close:hover,\n          .close:focus {\n              color: var(--cta-color, #f00);\n          }\n          .modal-body {\n              padding: 20px;\n              max-height: 300px;\n              overflow-y: auto;\n          }\n          .modal-footer {\n              display: flex;\n              justify-content: flex-end;\n              padding: 0 10px;\n              border-top: 1px solid rgba(111,111,111,.35);\n              margin-left: 10px;\n              margin-right: 10px;\n          }\n\n          @media only screen and (max-width: 767px) {\n              .modal-body {\n                  padding: 10px;\n                  max-height: 220px;\n\n              }\n              .modal-wrapper {\n                  width: 99%;\n                  max-width:100% !important;\n              }\n\n          }\n      </style>\n      <div class=\"modal\">\n          <div class=\"modal-wrapper\">\n              <div class=\"modal-header\">\n                  <slot name=\"title\"></slot>\n                  <div class=\"title-spacer\"></div>\n                  <button class=\"close\">&times;</button>\n              </div>\n              <div class=\"modal-body\">\n                  <slot></slot>\n              </div>\n              <div class=\"modal-footer\">\n                  <slot name=\"footer\">\n                      <button class=\"modal-close\">Close</button>\n                      <button class=\"modal-save\">Save</button>\n                  </slot>\n              </div>\n          </div>\n      </div>\n      `;\n    }\n}\n\ncustomElements.define(\"z-modal\", ZModal);\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n// ----------------------------------------\n// Star component\n// ----------------------------------------\nclass StarComponent extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        this.render();\n    }\n\n    static get observedAttributes() {\n        return [\"stars\", \"half\"];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        this.render();\n    }\n\n    render() {\n        const starCount = parseInt(this.getAttribute(\"stars\")) || 1;\n        const half = this.getAttribute(\"half\") === \"true\";\n        const fragment = document.createDocumentFragment();\n\n        for (let i = 0; i < starCount; i++) {\n            const starImg = document.createElement(\"img\");\n            starImg.src = \"../../dist/img/icons/alerts/star-solid.svg\";\n            starImg.alt = \"\";\n            starImg.className = \"icon icon-gold\";\n            fragment.appendChild(starImg);\n        }\n\n        if (half && starCount < 5) {\n            const halfStarImg = document.createElement(\"img\");\n            halfStarImg.src = \"../../dist/img/icons/alerts/star-half-stroke-regular.svg\";\n            halfStarImg.alt = \"\";\n            halfStarImg.className = \"icon icon-gold\";\n            fragment.appendChild(halfStarImg);\n        }\n\n        this.shadowRoot.innerHTML = `\n          <style>\n              .icon {\n                  width: 24px;\n                  height: 24px;\n              }\n      .icon-gold{\n        width: 9px;\n        \n        filter: invert(85%) sepia(36%) saturate(2389%) hue-rotate(345deg) brightness(96%) contrast(97%);\n        }\n        \n        .icon-silver{\n        width: 9px;\n        filter: invert(50%) sepia(8%) saturate(15%) hue-rotate(314deg) brightness(103%) contrast(84%);\n        }\n          </style>\n      `;\n        this.shadowRoot.appendChild(fragment);\n    }\n}\n\ncustomElements.define(\"star-component\", StarComponent);\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n// ----------------------------------------\n// Exit Intent\n// ----------------------------------------\n// Get the modal\nvar modal = document.querySelector(\".exit\");\n\n// Function to show the modal if conditions are met\nfunction tryToShowModal() {\n    if (modal && shouldShowModal() && !modalIsDisplayed()) {\n        modal.style.display = \"block\";\n    }\n}\n\n// Function to hide modal and set a flag in local storage\nfunction closeModal() {\n    if (modal) {\n        modal.style.display = \"none\";\n        // Set the flag in local storage with the current timestamp\n        localStorage.setItem(\"modalClosed\", new Date().getTime());\n    }\n}\n\n// Check if the modal is currently displayed\nfunction modalIsDisplayed() {\n    return modal.style.display === \"block\";\n}\n\n// Get the <span> element that closes the modal\nvar span = document.querySelector(\".close\");\n\n// When the user clicks on <span> (x), close the modal\nif (span) {\n    span.onclick = closeModal;\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function (event) {\n    if (event.target == modal) {\n        closeModal();\n    }\n};\n\n// Check local storage to see if we should show the modal\nfunction shouldShowModal() {\n    var modalClosedTime = localStorage.getItem(\"modalClosed\");\n    if (modalClosedTime) {\n        var now = new Date();\n        var daysPassed = (now.getTime() - parseInt(modalClosedTime, 10)) / (1000 * 3600 * 24);\n        return daysPassed >= 7;\n    }\n    return true;\n}\n\n// Trigger the modal after 8 seconds if the user hasn't closed it already\nsetTimeout(function () {\n    document.addEventListener(\"mousemove\", function (e) {\n        if (e.clientY <= 5) {\n            tryToShowModal();\n        }\n    });\n}, 8000);\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const sidebar = document.getElementById(\"sidebar\");\n    const activeIndicator = document.getElementById(\"activeIndicator\");\n    const menuItems = document.querySelectorAll(\"#sidebar ul li\");\n    const rail = document.getElementById(\"rail\");\n    const closeButton = document.querySelector(\".close\");\n    const tabButton = document.getElementById(\"tab-button\");\n    const icon = document.querySelector(\"#tab-button i\");\n\n    // Find the navigation element\n    const navigationElement = document.querySelector(\"#sidebar nav\");\n\n    // Check if sidebar exists\n    if (sidebar) {\n        // Find all elements with class \"sidebar-content\"\n        const sidebarContents = document.querySelectorAll(\".sidebar-content\");\n\n        function updateIndicator() {\n            let menuHeight = 0;\n            menuItems.forEach((item) => {\n                menuHeight += item.offsetHeight;\n            });\n\n            // Calculate the height of the navigation element\n            const navigationHeight = navigationElement.offsetHeight;\n\n            rail.style.height = `${navigationHeight - 17}px`;\n\n            const activeItem = document.querySelector(\".active\");\n            if (activeItem) {\n                activeIndicator.style.height = `${activeItem.offsetHeight}px`;\n                activeIndicator.style.top = `${activeItem.offsetTop + 28}px`; // Updated position\n            }\n        }\n\n        function handleMenuItemClick(event) {\n            menuItems.forEach((item) => item.classList.remove(\"active\"));\n            event.currentTarget.classList.add(\"active\");\n            updateIndicator();\n\n            // Check window width and hide sidebar if less than 768 pixels\n            if (window.innerWidth < 768) {\n                sidebar.style.left = \"-250px\";\n\n                // Toggle the classes for all \"sidebar-content\" elements\n                sidebarContents.forEach((element) => {\n                    element.classList.remove(\"sidebar-content\");\n                    element.classList.add(\"sidebar-content-off\");\n                });\n\n                // Toggle the class for the tab button\n                tabButton.classList.remove(\"tab-button-off\");\n                tabButton.classList.add(\"tab-button\");\n            }\n\n            // Show the tab button if the sidebar is closed\n            if (sidebar.style.left === \"-250px\") {\n                tabButton.style.display = \"block\";\n            }\n        }\n\n        menuItems.forEach((item) => {\n            item.addEventListener(\"click\", handleMenuItemClick);\n        });\n\n        updateIndicator();\n\n        // Close button functionality\n        if (closeButton) {\n            closeButton.addEventListener(\"click\", function () {\n                sidebar.style.left = \"-250px\";\n                tabButton.style.display = \"block\";\n                icon.style.transform = \"rotate(180deg)\"; // Rotate the icon\n\n                // Toggle the classes for all \"sidebar-content\" elements\n                sidebarContents.forEach((element) => {\n                    element.classList.remove(\"sidebar-content\");\n                    element.classList.add(\"sidebar-content-off\");\n                });\n\n                // Toggle the class for the tab button\n                tabButton.classList.remove(\"tab-button-off\");\n                tabButton.classList.add(\"tab-button\");\n            });\n        }\n\n        // Tab button functionality\n        if (tabButton) {\n            tabButton.addEventListener(\"click\", function () {\n                if (sidebar.style.left === \"-250px\") {\n                    sidebar.style.left = \"0\";\n                    tabButton.style.display = \"none\";\n                    icon.style.transform = \"rotate(0deg)\"; // Reset the icon rotation\n\n                    // Toggle the classes for all \"sidebar-content\" elements\n                    sidebarContents.forEach((element) => {\n                        element.classList.remove(\"sidebar-content-off\");\n                        element.classList.add(\"sidebar-content\");\n                    });\n\n                    // Toggle the class for the tab button\n                    tabButton.classList.remove(\"tab-button\");\n                    tabButton.classList.add(\"tab-button-off\");\n                } else {\n                    sidebar.style.left = \"-250px\";\n\n                    // Toggle the classes for all \"sidebar-content\" elements\n                    sidebarContents.forEach((element) => {\n                        element.classList.remove(\"sidebar-content\");\n                        element.classList.add(\"sidebar-content-off\");\n                    });\n\n                    // Toggle the class for the tab button\n                    //tabButton.classList.remove(\"tab-button-off\");\n                    //tabButton.classList.add(\"tab-button\");\n                }\n            });\n        }\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n// ----------------------------------------\n// Wizard\n// ----------------------------------------\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    const steps = document.querySelectorAll(\".wizard-step\");\n    const navItems = document.querySelectorAll(\".wizard-nav\");\n\n    if (steps.length > 0 && navItems.length > 0) {\n        let currentStep = 1;\n        const totalSteps = steps.length;\n\n        function goToStep(stepNumber) {\n            steps.forEach((step) => {\n                step.style.display = \"none\"; // Hide all steps\n            });\n            document.getElementById(`step-${stepNumber}`).style.display = \"block\"; // Show the desired step\n\n            // Update the current class on pagination\n            navItems.forEach((item) => {\n                if (item.dataset.step == stepNumber.toString()) {\n                    item.classList.add(\"current\");\n                } else {\n                    item.classList.remove(\"current\");\n                }\n            });\n        }\n\n        navItems.forEach((item) => {\n            item.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                let direction = item.dataset.direction;\n                if (direction) {\n                    if (direction === \"next\" && currentStep < totalSteps) {\n                        currentStep++;\n                    } else if (direction === \"prev\" && currentStep > 1) {\n                        currentStep--;\n                    }\n                } else if (item.dataset.step) {\n                    currentStep = parseInt(item.dataset.step);\n                }\n                goToStep(currentStep);\n            });\n        });\n\n        // Initialize the wizard to the first step\n        goToStep(currentStep);\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const mswizard = document.querySelector(\".mswizard\");\n    if (!mswizard) return;\n    const progressBar = mswizard.querySelector(\".mswizard-progress\");\n    const currentStepSpan = mswizard.querySelector(\"#current-step\");\n    const totalStepsSpan = mswizard.querySelector(\"#total-steps\");\n    const progressPercentage = mswizard.querySelector(\".progress-percentage\");\n    const steps = mswizard.querySelectorAll(\".mswizard-step\");\n    const totalSteps = steps.length;\n    totalStepsSpan.textContent = totalSteps;\n    progressBar.max = 100;\n\n    function updatemswizardStep(stepNumber) {\n        steps.forEach((step) => (step.style.display = \"none\"));\n        mswizard.querySelector(`#step-${stepNumber}`).style.display = \"block\";\n        currentStepSpan.textContent = stepNumber;\n        const progressValue = ((stepNumber - 1) / (totalSteps - 1)) * 100;\n        progressBar.value = progressValue;\n        progressPercentage.textContent = `${Math.round(progressValue)}%`;\n        const percentagePosition = progressBar.offsetWidth * (progressValue / 100) - progressPercentage.offsetWidth / 2;\n        progressPercentage.style.left = `${Math.max(0, percentagePosition)}px`;\n        progressPercentage.style.visibility = progressValue >= 5 ? \"visible\" : \"hidden\";\n    }\n\n    steps.forEach((step, index) => {\n        if (index === totalSteps - 1) return; // No buttons on the last step\n\n        const buttonContainer = document.createElement(\"div\");\n        buttonContainer.className = \"button-container\";\n\n        // Always add the Previous button except on the last step\n        const prevButton = document.createElement(\"button\");\n        prevButton.textContent = \"Previous\";\n        prevButton.className = \"prev-btn\";\n        prevButton.setAttribute(\"role\", \"button\");\n        prevButton.setAttribute(\"aria-label\", `Go back to step ${index}`);\n        if (index === 0) {\n            prevButton.disabled = true;\n            prevButton.classList.add(\"disabled\");\n        } else {\n            prevButton.addEventListener(\"click\", () => updatemswizardStep(index));\n        }\n        buttonContainer.appendChild(prevButton);\n\n        // Add the Next/Finish button to all steps except the last\n        const nextButton = document.createElement(\"button\");\n        nextButton.textContent = index === totalSteps - 2 ? \"Finish\" : \"Next\";\n        nextButton.className = \"next-btn\";\n        nextButton.setAttribute(\"role\", \"button\");\n        nextButton.setAttribute(\"aria-label\", `Go to step ${index + 2}`);\n        nextButton.addEventListener(\"click\", () => updatemswizardStep(index + 2));\n        buttonContainer.appendChild(nextButton);\n\n        step.appendChild(buttonContainer);\n    });\n\n    updatemswizardStep(1);\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n// ----------------------------------------\n// Tabs\n// ----------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const tabs = document.querySelectorAll(\".tab-nav .item\");\n\n    if (tabs.length > 0) {\n        function removeCurrentClass() {\n            tabs.forEach((tab) => {\n                tab.classList.remove(\"current\");\n            });\n        }\n\n        function setCurrentClass(event) {\n            event.preventDefault();\n            removeCurrentClass();\n            event.target.classList.add(\"current\");\n        }\n\n        tabs.forEach((tab) => {\n            tab.addEventListener(\"click\", setCurrentClass);\n        });\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//-------------------------------------\n//Poll\n//-------------------------------------\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var currentStep = 1;\n    var results = { a: 0, b: 0, c: 0, d: 0 };\n\n    function updateStepDisplay(step) {\n        var steps = document.querySelectorAll(\".wizard-step\");\n        steps.forEach(function (stepDiv) {\n            stepDiv.classList.remove(\"active\");\n        });\n        document.querySelector(\"#step-\" + step).classList.add(\"active\");\n    }\n\n    function handleOptionSelect(event) {\n        var selectedOption = event.target.value;\n        results[selectedOption]++;\n        if (currentStep < 4) {\n            currentStep++;\n            updateStepDisplay(currentStep);\n        } else {\n            // Call the showResult function immediately after the last selection\n            showResult();\n        }\n    }\n\n    function showResult() {\n        // Remove the active class from all steps\n        var steps = document.querySelectorAll(\".wizard-step\");\n        steps.forEach(function (step) {\n            step.classList.remove(\"active\");\n        });\n\n        // Calculate the most chosen answer\n        var max = Math.max(...Object.values(results));\n        var mostChosenResults = Object.keys(results).filter(function (key) {\n            return results[key] === max;\n        });\n\n        // Take the first result if there's a tie\n        var mostChosen = mostChosenResults[0];\n        var resultElement = document.querySelector('#result-types [data-result=\"' + mostChosen + '\"]');\n        var resultContent = resultElement ? resultElement.innerHTML : mostChosen;\n\n        // Update the result div and make the result visible\n        var resultDiv = document.getElementById(\"result-text\");\n        if (resultDiv) {\n            resultDiv.innerHTML = resultContent;\n        }\n        var resultContainer = document.getElementById(\"result\");\n        if (resultContainer) {\n            resultContainer.classList.add(\"active\"); // Ensure this class makes the element visible\n        }\n    }\n\n    // Attaching change event listeners to radio buttons\n    var wizard = document.querySelector(\".wizard\");\n    if (wizard) {\n        var radioButtons = wizard.querySelectorAll('input[type=\"radio\"]');\n        radioButtons.forEach(function (radioButton) {\n            radioButton.addEventListener(\"change\", handleOptionSelect);\n        });\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const anchors = document.querySelectorAll('a[href^=\"#\"]');\n\n    if (anchors.length > 0) {\n        anchors.forEach((anchor) => {\n            anchor.addEventListener(\"click\", function (e) {\n                const hrefAttribute = this.getAttribute(\"href\");\n\n                // Skip processing if href is only '#'\n                if (hrefAttribute === \"#\") {\n                    return;\n                }\n\n                e.preventDefault();\n                const targetElement = document.querySelector(hrefAttribute);\n\n                if (targetElement) {\n                    // Get the target element's top position relative to the document\n                    const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset;\n\n                    // Scroll to the position minus 100 pixels\n                    window.scrollTo({\n                        top: targetPosition - 100,\n                        behavior: \"smooth\"\n                    });\n                }\n            });\n        });\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    const banner = document.querySelector(\".cookie-consent-banner\");\n\n    // Check if the banner element exists\n    if (banner) {\n        const acceptBtn = document.querySelector(\".accept-cookies\");\n        banner.style.zIndex = \"1100\";\n\n        // Check if cookies are already accepted\n        if (!localStorage.getItem(\"cookies-accepted\")) {\n            banner.style.display = \"block\"; // Show banner if cookies not accepted\n        }\n\n        // Event listener for accept button\n        if (acceptBtn) {\n            acceptBtn.addEventListener(\"click\", () => {\n                localStorage.setItem(\"cookies-accepted\", \"true\"); // Set flag in local storage\n                banner.style.display = \"none\"; // Hide banner\n            });\n        }\n    }\n});\n","/*\n * zenCSS v2.1.0-beta (https://zencss.com/)\n * Copyright 2022-2024 Shaun Mackey\n * Licensed under MIT (https://github.com/zen-solutions/zencss/blob/main/LICENSE)\n */\n\n//--------------------------------------------------------\n//Toggle  test mode\n//--------------------------------------------------------\n\nvar toggleButton = document.getElementById(\"toggleButton\");\n\nif (toggleButton) {\n    toggleButton.addEventListener(\"click\", function () {\n        const toggleClassOnElements = (selector, className) => {\n            const elements = document.querySelectorAll(selector);\n            elements.forEach((element) => {\n                element.classList.toggle(className);\n            });\n        };\n\n        const selectorsAndClasses = [\n            [\"z-container\", \"z-container-outline-on\"],\n            [\"z-container-fluid\", \"z-container-fluid-outline-on\"],\n            [\"z-row\", \"z-row-outline-on\"],\n            [\"z-col\", \"z-col-outline-on\"],\n            [\"p\", \"p-outline-on\"],\n            [\"h1\", \"h1-outline-on\"],\n            [\"h2\", \"h2-outline-on\"],\n            [\"h3\", \"h3-outline-on\"],\n            [\"h4\", \"h4-outline-on\"],\n            [\"h5\", \"h5-outline-on\"],\n            [\"h6\", \"h6-outline-on\"],\n            [\".center-line\", \"center-line-outline-on\"],\n        ];\n\n        selectorsAndClasses.forEach(([selector, className]) => {\n            toggleClassOnElements(selector, className);\n        });\n    });\n}\n"],"names":[],"sourceRoot":""}